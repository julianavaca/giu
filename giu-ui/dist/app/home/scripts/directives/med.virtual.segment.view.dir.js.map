{"version":3,"sources":["app/home/scripts/directives/med.virtual.segment.view.dir.js"],"names":[],"mappings":"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","file":"app/home/scripts/directives/med.virtual.segment.view.dir.js","sourcesContent":["'use strict';\n\nimport SegmentsBase from '../../../home/scripts/controllers/med.segments.base.ctrl.js';\n\nclass ViewVirtualSegmentControllerDir {\n\n  /*@ngInject*/\n  constructor($mdDialog, $state, $window, segmentTransformerService, translateService, segmentService, squeezeService, api, alertService, $scope){\n\n    this.api = api;\n    this.alertService = alertService;\n    this.translateService = translateService;\n    this.segmentService = segmentService;\n    this.squeezeService = squeezeService;\n    this.segmentTransformerService = segmentTransformerService;\n    this.$state = $state;\n    this.window = $window;\n    this.mediaId = this.$state.params.id;\n\n    this.segmentsBase = new SegmentsBase(\n      segmentService,\n      squeezeService,\n      segmentTransformerService,\n      translateService,\n      $state,\n      $mdDialog,\n      alertService,\n      $scope\n    );\n\n    this.segmentsBase.entity = this.mediaMaterial.segments;\n    this.editFirst = this.editFirst || false ;\n    this.segmentsBase.segmentEdit = {value: false};\n    this.segmentsBase.segmentEditShow = {value: true};\n    this.segmentsBase.squeezeCreate = {value: false};\n    this.segmentsBase.action = [\n      {\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: ()=>{this._onSegmentEdit();},\n        show: this.segmentsBase.segmentEditShow\n      },\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSegmentCreate();},\n        show: this.segmentsBase.segmentEdit\n      }\n    ];\n    this.segmentsBase.squeezeCreditsEdit = {value: false};\n    this.segmentsBase.actionSqueezeCredits = [\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSqueezeCreate();},\n        show: this.segmentsBase.squeezeCreate\n      }\n    ];\n\n    this.getSqueezeCreditTypes();\n\n    this._execute();\n    if (this.editFirst && this.cardNumber == 0){\n      this._onSegmentEdit();\n    }\n  }\n\n  getTitle(){\n    return this.translateService.translate (' ' + this.mediaMaterial.mediaMaterial.id);\n  }\n\n  actionTitle(){\n    let mediaMaterialIds = this.title.split('-');\n\n    let parentParams = {\n      mediaFormat: mediaMaterialIds[0],\n      mediaType: mediaMaterialIds[1],\n      mediaId: mediaMaterialIds[2],\n      materialId:mediaMaterialIds[3],\n      chapterFrom:mediaMaterialIds[4],\n      chapterTo:mediaMaterialIds[4]\n    };\n\n    this.state.go('searchResults', parentParams);\n  }\n\n  getSqueezeCreditTypes(){\n    this.response = this.api['mediaSqueezeCreditsTypes'].get();\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.squeezeCreditTypes = response.content;\n\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n  }\n\n  _execute() {\n    let self = this;\n    this.segmentsBase.segments = [];\n    this.segmentsBase.entity.items.forEach(seg => {\n      self.segmentsBase.segments.push(Object.assign({},seg));\n    });\n    this.segmentTransformerService.segmentsToString(this.segmentsBase.segments);\n    this.segmentsBase.changeSegment(this.segmentsBase.segments[0]);\n    this.segmentsBase.audit = {\n      enabled: this.segmentsBase.entity && this.segmentsBase.entity.audit,\n      entity: {audit: this.segmentsBase.entity.audit}\n    };\n  }\n\n\n  closeModal() {\n    this.mdDialog.hide();\n  }\n\n  getSegmentBase(){\n    return this.segmentsBase;\n  }\n\n  getSegmentBaseProperty(property){\n    return this.segmentsBase[property];\n  }\n\n  _initSegment(){\n    this.segmentsBase._initSegment();\n  }\n\n  _onSegmentCreate(){\n    this.segmentsBase._onSegmentCreate();\n  }\n\n  _checkInitialSegment(){\n    this.segmentsBase._checkInitialSegment();\n  }\n\n  _onSegmentEdit(){\n    this.segmentsBase._onSegmentEdit()\n  }\n\n  _onSqueezeCreate(){\n    this.segmentsBase._onSqueezeCreate();\n  }\n\n  changeSegment(segment){\n    this.segmentsBase.changeSegment(segment);\n  }\n\n  _allowCreateSqueeze(){\n    this.segmentsBase._allowCreateSqueeze();\n  }\n\n  deleteEntry(entry){\n    this.segmentsBase.deleteEntry(entry);\n  }\n\n  deleteSegment(index){\n    this.segmentsBase.deleteSegment(index);\n  }\n\n  segmentCancel(){\n    this.segmentsBase.segmentCancel(this);\n  }\n\n  reload(){\n    this.segmentsBase.reload();\n  }\n\n  isValid(){\n    return this.segmentsBase.isValid();\n  }\n\n  validateAndSave(form){\n\n    form.$valid = this.isValid();\n    //TODO: Hacer un clone mas lindo;\n    this.segmentsBase.entity.items = [];\n    this.segmentsBase.segments.forEach(seg => {\n      this.segmentsBase.entity.items.push(Object.assign({},seg));\n    });\n    this.segmentTransformerService.segmentsToObject(this.segmentsBase.entity.items);\n\n    this.api['mediaSegments'].update({'id':this.mediaMaterial.mediaMaterial.id}, this.segmentsBase.entity).$promise\n      .then(()=> this.$state.go(this.$state.current, {}, {reload: true}) ,(error)=>{\n        this.onResponseError(error);\n      }\n    )\n      .then(() => this._execute());\n  }\n\n  onResponseError(error){\n    if(error.status === 422){\n      let msj='Error in: ';\n      error.data.forEach( err =>{\n        msj= msj + ' ' + err.field;\n      });\n      this.alertService.error({\n        title: this.translateService.translate('results.tabs.segments.error.message.IngestId.duplicate'),\n        message: msj\n      });\n    }\n  }\n\n  changeCreditType(segment){\n    this.segmentsBase.changeCreditType(segment);\n  }\n\n  createCredit(segment){\n    this.segmentsBase.createCredit(segment);\n  }\n\n  deleteSqueeze(squeeze){\n    this.segmentsBase.deleteSqueeze(squeeze);\n  }\n\n\n}\n\nexport default class VirtualSegmentDirective {\n\n  constructor() {\n    this.restrict = 'E';\n    this.replace = false;\n    this.template = '<div style=\"padding:10px;\" layout=\"column\" flex><ng-include src=\"\\'home/views/med.search.results.tabs.segments.html\\'\"></ng-include></div>';\n    this.scope = {};\n    this.bindToController = {\n      'mediaMaterial': '=',\n      'collapsable': '=',\n      'editFirst': '=',\n      'cardNumber':'='\n    };\n\n    this.controller = ViewVirtualSegmentControllerDir;\n    this.controllerAs = 'vm';\n  }\n\n  static directiveFactory() {\n    var instance = new VirtualSegmentDirective();\n    return instance;\n  }\n\n}\n"],"sourceRoot":"/source/"}