{"version":3,"sources":["app/home/scripts/services/med.segment.srv.js"],"names":[],"mappings":"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","file":"app/home/scripts/services/med.segment.srv.js","sourcesContent":["'use strict';\n\nimport TimeCodeService from './med.time.code.srv.js';\n\nexport default class SegmentService extends TimeCodeService {\n\n  /*@ngInject*/\n  constructor(timeBaseTransformerService) {\n    super(timeBaseTransformerService);\n    this.timeBaseTransformer = timeBaseTransformerService;\n  }\n\n  updateTCOut(segment, frames){\n    if(this._areFormatsValid(segment)) {\n      segment.tCOut = this._plus(segment.tCIn,segment.lth,frames);\n    }\n  }\n\n  notDuplicateIngestedId(segments) {\n    return segments.filter(seg => this.isDuplicatedIngestedId(seg, segments)).length === 0;\n  }\n\n  isDuplicatedIngestedId(seg, segments){\n    if(seg.ingestID === null || seg.ingestID === undefined || seg.ingestID === ''){\n        return false;\n    }\n    return segments.filter(it => it.segmentNumber !== seg.segmentNumber && seg.ingestID === it.ingestID).length !== 0;\n  }\n\n  areFramesValid(segments, frames) {\n    return typeof segments.find(seg => !this._areFramesValid(seg, frames)) === 'undefined';\n  }\n\n  _areFramesValid(segment, frames){\n    let toValidate = [segment.tCIn,segment.lth];\n    if(segment.credit) {\n      toValidate.push(segment.credit.tCIn);\n      toValidate.push(segment.credit.lth);\n    }\n    return typeof toValidate.find(it => !this.isFramesValid(it, frames)) === 'undefined';\n  }\n\n  areFormatValid(segments) {\n    return typeof segments.find(seg => !this._areFormatsValid(seg)) === 'undefined';\n  }\n\n  areValid(segments) {\n    return typeof segments.find(seg => !this._areValid(seg)) === 'undefined';\n  }\n\n  _areValid(segment){\n    let toValidate = [segment.tCIn,segment.lth,segment.tCOut];\n    return toValidate.filter(it => angular.isUndefined(it)).length === 0;\n  }\n  \n\n  areOverlaped(segments){\n    return segments.filter(seg => this.isOverlaped(seg, segments)).length !== 0;\n  }\n\n  isOverlaped(currentSegment, segments){\n    if(!currentSegment || currentSegment.segmentNumber < 2) {\n      return false;\n    } else {\n      let overlappedItems = segments.filter(it => this._isOverlaped(currentSegment, it));\n      return overlappedItems.length !== 0;\n    }\n  }\n\n  areCreditValid(segments){\n    return typeof segments.find(seg => !this.isCreditValid(seg)) === 'undefined';\n  }\n\n  isCreditValid(segment){\n    if(!segment.credit) {\n      return true;\n    }\n    if(!segment.credit.tCOut || !segment.credit.tCIn) {\n      return true;\n    }\n    return this._isBiggerOrEqual(segment.credit.tCIn, segment.tCIn) &&\n          this._isBiggerOrEqual(segment.tCOut, segment.credit.tCOut);\n  }\n\n  _isOverlaped(segment, anotherSegment) {\n    return anotherSegment.segmentNumber < segment.segmentNumber &&\n      anotherSegment.segmentNumber !== 0 &&\n      !this._isBiggerOrEqual(segment.tCIn, anotherSegment.tCOut);\n  }\n\n  _areFormatsValid(segment){\n    let toValidate = [segment.tCIn,segment.lth];\n    if(segment.credit) {\n      toValidate.push(segment.credit.tCIn);\n      toValidate.push(segment.credit.lth);\n    }\n    return typeof toValidate.find(it => !this.isFormatValid(it)) === 'undefined';\n  }\n}\n"],"sourceRoot":"/source/"}