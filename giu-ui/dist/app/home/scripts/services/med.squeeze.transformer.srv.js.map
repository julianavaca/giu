{"version":3,"sources":["app/home/scripts/services/med.squeeze.transformer.srv.js"],"names":[],"mappings":"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","file":"app/home/scripts/services/med.squeeze.transformer.srv.js","sourcesContent":["'use strict';\n\nimport TimeBaseTransformer from './med.time.base.transformer.srv.js';\n\nexport default class SqueezeTransformerService {//extends TimeBaseTransformer {\n\n  squeezeToString(squeeze){\n    squeeze.TFIn = this._toString(squeeze.timeFrameIn);\n    squeeze.TFLen = this._toString(squeeze.timeFrameLength);\n    squeeze.TFOut = this._toString(squeeze.timeFrameOut);\n    return squeeze;\n  }\n\n  squeezesToString(squeezes){\n    squeezes.map(it => this.squeezeToString(it) );\n  }\n  \n  squeezeToObject(squeeze){\n    squeeze.timeFrameIn = this._toObject(squeeze.TFIn);\n    delete squeeze.TFIn;\n    squeeze.timeFrameLength = this._toObject(squeeze.TFLen);\n    delete squeeze.TFLen;\n    squeeze.timeFrameOut = this._toObject(squeeze.TFOut);\n    delete squeeze.TFOut;\n    return squeeze;\n  }\n\n  squeezesToObject(squeezes){\n    squeezes.map(it => this.squeezeToObject(it) );\n  }\n\n  //TODO: angular no injecta el time base transformer\n\n  timeCodeToFrame(tc, frames){\n    let tcArray = tc.split(\":\").map(it => parseInt(it));\n    let result = 0;\n    result += tcArray[3];\n    result += tcArray[2] * frames;\n    result += tcArray[1] * 60 * frames;\n    result += tcArray[0] * 3600 * frames;\n    return result;\n  }\n\n  framesToTimecode(frames, maxFrames){\n    let tcArray = [0,0,0,0];\n    let remFrames = frames;\n\n    let hours = this._framesToObject(remFrames, 3600, maxFrames);\n    tcArray[0] = hours;\n    remFrames -= this._objectToFrame(hours, 3600, maxFrames);\n\n    let minutes = this._framesToObject(remFrames, 60, maxFrames);\n    tcArray[1] = minutes;\n    remFrames -= this._objectToFrame(minutes, 60, maxFrames);\n\n    let seconds = this._framesToObject(remFrames, 1, maxFrames);\n    tcArray[2] = seconds;\n    remFrames -= this._objectToFrame(seconds, 1, maxFrames);\n\n    tcArray[3] = remFrames;\n\n    return this._fillWithZeroes(tcArray.join(\":\"));\n  }\n\n  _framesToObject(frames, scale, maxFrames) {\n    let object = Math.floor(frames / (scale * maxFrames));\n    return object >= 1 ? object : 0;\n  }\n\n  _objectToFrame(object, scale, maxFrames) {\n    return object * (scale * maxFrames);\n  }\n\n  _toObject(timeCode){\n    if(this._isValid(timeCode)){\n      return this._elementToObject(timeCode);\n    }\n  }\n\n  _toString(timeCodeString) {\n    if(this._isValid(timeCodeString)){\n      return this._elementToString(timeCodeString);\n    }\n  }\n\n  _elementToObject(timeCode) {\n    let splitted = timeCode.split(\":\");\n    return {\n      hour: splitted[0],\n      minute: splitted[1],\n      second: splitted[2],\n      frame: splitted[3]\n    };\n  }\n\n  _elementToString(object) {\n    let stringTC = object.hour + \":\" + object.minute + \":\" + object.second + \":\" + object.frame;\n    return this._fillWithZeroes(stringTC);\n  }\n\n  _fillWithZeroes(stringTC){\n    return stringTC\n      .split(\":\")\n      .map(it => this._fillZeroes(it))\n      .join(':');\n  }\n\n  _fillZeroes(stringTC) {\n    if(stringTC.length < 2){\n      return '0' + stringTC;\n    }\n    return stringTC;\n  }\n\n  _isValid(element){\n    return typeof element !== 'undefined' && element !== null;\n  }\n\n  _areValid(elements){\n    return elements.filter(it => !this._isValid(it)).length === 0;\n  }\n\n}\n"],"sourceRoot":"/source/"}