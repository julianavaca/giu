{"version":3,"sources":["app/home/scripts/med.wizard.tab.js"],"names":[],"mappings":"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","file":"app/home/scripts/med.wizard.tab.js","sourcesContent":["/**\n * Created by luke on 06/04/16.\n  getAspectRatios() {\n    let response = this.api['aspectsRatio'].get({'id': this.getMediaId().concat('-').concat(this.entity.material.number).concat('-').concat(this.entity.material.chapterNumber)});\n\n    return response;\n  }\n\n */\n'use strict';\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\nexport default class WizardTab extends Saveable {\n\n  /*@ngInject*/\n  constructor(config){\n    super(config);\n  }\n\n\n  /**\n   * Se agregan los injector propios de esta clase. Lo llama CrudAble\n   *\n   * @private\n   */\n  _addInjector() {\n\n    this.$state = this.$injector.get('$state');\n    this.translate = this.$injector.get('$filter')('translate');\n    this.alertService = this.$injector.get('alertService');\n    this.newMediaService = this.$injector.get('newMediaService');\n\n    this.newMediaService.tabsCtrl.push(this);\n  }\n\n  _onTabLoad() {\n\n  }\n\n  nextStep(){\n    this.newMediaService.nextStep();\n  }\n\n  saveAndNextStep(form) {\n    if(form.$pristine){\n      this.nextStep();\n    } else{\n      return this.save(form,true);\n    }\n  }\n\n  saveAndNextStepWithCallback(form, fn) {\n    if(form.$pristine){\n      this.nextStep();\n    } else{\n      this.save(form,true).then(fn);\n    }\n  }\n\n  saveAndExit(form) {\n    if(form.$pristine){\n      this.$state.go(this.backToState.state, {'id': this.getMediaId()}, { reload: true });\n      this.cleanService();\n    } else{\n      this.save(form, false);\n    }\n  }\n\n  save(form, nextStep){\n\n    //Si tiene error no hace el submit\n    if(form.$valid) {\n      let promise;\n\n      if (this._isNew() || this._isNotMediaMaterial()) {//POST\n        delete this.state.params.id;\n        promise = this.api[this.endpoint].save(this.$state.params, this.entity).$promise;\n\n      } else { //PUT\n        promise = this.api[this.endpoint].update(this._getPathParams(), this.entity).$promise;\n      }\n\n\n      promise.then((response) => {\n        this.$log.info('then', response);\n\n        if(this._isNotMediaMaterial()){\n          let lastIndex = response.url.lastIndexOf('/');\n          this.newMediaService.mediaId = response.url.substring(lastIndex + 1);\n        }\n\n        this.$log.info('back to state',this.backToState.state, this.backToState.params);\n\n        this.alertService.success(\n          {\n            title:this.translate(this.successTitle),\n            message:this._isNew() ? this.translate(this.successCreateMessage) : this.translate(this.successEditMessage)\n          }\n        );\n        form.$setPristine();\n        if(nextStep){\n          this.nextStep();\n        } else {\n          this.$state.go(this.backToState.state, {'id': this.getMediaId()}, { reload: true });\n          this.cleanService();\n        }\n\n      }, (err) => {\n\n        if(err.status === 422){\n          err.data.forEach(data => {\n            form[data.field].$error = {backendError: true};\n            form[data.field].backenMessage = data.message;\n          });\n        } else {\n\n          this.alertService.error({\n            title: this.translate(this.errorTitle),\n            message: err.data.message\n\n          });\n        }\n      });\n\n      return promise;\n\n    } else {\n\n      this.$log.info('form invalid');\n\n      return undefined;\n    }\n  }\n\n\n  goToBackState(){\n    this.newMediaService.goToBackState();\n  }\n\n  _isNew(){\n    return !this.newMediaService.mediaId;\n  }\n\n  _getPathParams() {\n    return this.newMediaService.mediaId ? {'id' : this.newMediaService.mediaId} : undefined;\n  }\n\n  getMediaId(){\n    return this.newMediaService.mediaId;\n  }\n\n  _isNotMediaMaterial(){\n    if(this.newMediaService.mediaId == undefined){\n      return true;\n    }\n    return (this.newMediaService.mediaId.match(/-/g) || []).length != 4;\n  }\n\n  getServiceModel(){\n    return this.newMediaService.model;\n  }\n\n  existsKey(key){\n    return this.newMediaService.getFromModel(key) != undefined;\n  }\n\n  getFromModel(key){\n    return this.newMediaService.getFromModel(key);\n  }\n\n  setToServiceModel(key, value){\n    this.newMediaService.setToModel(key, value);\n  }\n\n  setMediaId(value){\n    this.newMediaService.mediaId = value;\n  }\n\n  getMediaId(){\n    let ids = this.newMediaService.mediaId.split('-');\n    return ids[0].concat('-').concat(ids[1]).concat('-').concat(ids[2]);\n  }\n\n  cleanService(){\n    this.newMediaService.mediaId = undefined;\n    this.newMediaService.model = {};\n    this.newMediaService.invalidMaterial = true;\n    this.newMediaService.invalidPlusDetail = true;\n    this.newMediaService.invalidSegment =  true;\n  }\n\n}\n"],"sourceRoot":"/source/"}