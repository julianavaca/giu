{"version":3,"sources":["app/home/scripts/controllers/med.media.resources.edit.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.media.resources.edit.ctrl.js","sourcesContent":["'use strict';\n\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\nexport default class MediaEditCtrl extends Saveable {\n\n  /*@ngInject*/\n  constructor(\n    $injector,\n    api,\n    $state,\n    $window,\n    translateService) {\n\n    super(\n      {\n        injector:$injector,\n        executeGet: false,\n        endpoint: '',\n        backToState:'searchResults.detail',\n        key:'',\n        successTitle: 'generic.edit.alert.success.title',\n        successMessage: 'generic.edit.alert.success.message',\n        successCreateMessage: 'generic.edit.alert.create.success.message',\n        successEditMessage: 'generic.edit.alert.success.message',\n        errorTitle: 'generic.edit.alert.error',\n        params: {'id': $state.params.id }\n      }\n    );\n    this.api = api;\n    this.state = $state;\n    this.window = $window;\n    this.getResourcesFromApiCall();\n    this.endpoint = this.getResourceEndpoint();\n\n    this.collapsibleIds = {\n      mediaMaterialsAudios: 'searchResultsDetailAudiosCtrl',\n      mediaMaterialsSubtitles: 'searchResultsDetailSubtitleCtrl',\n      mediaMaterialsGraphics: 'searchResultsDetailGraphicCtrl'\n    };\n\n    this.collapsibleId = this._getCollapsibleId();\n\n    this.translateService = translateService;\n    this.audit = {};\n    this.action = [\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: () => {this.addEntryRow();},\n        show:{value:true},\n        disabled:false\n      }\n    ];\n\n    this.get().$promise.then((response) => {\n      if(response.items.length == 0) {\n        this.addEntryRow();\n      }\n      this.audit = {\n        enabled: response && response.audit,\n        isRemote: false,\n        entity: {audit: response.audit}\n      };\n\n    });\n\n  }\n\n  getAudit(){\n    if(!this.entity.audit) {\n      return false;\n    }\n    return this.audit;\n  }\n\n  _getCollapsibleId(){\n    return this.collapsibleIds[this.endpoint];\n  }\n\n  _addParams() {\n    return {};\n  }\n\n  // Este es un caso atipico de salvable, no hay casos de nuevos registros\n  _isNew() {\n    return false;\n  }\n\n  _initCreate() {\n    this.entity.media = { network: {}, state: {} };\n  }\n\n  // TODO: Sobreescribo el método de save para que pueda volver al estado anterior enviando parámetros, pero lo ideal sería modificar Salvable para permitir esto\n  save(form) {\n    if(form.$valid) {\n      let promise;\n      this.isLoading = true;\n      if (this._isNew()) {//POST\n        promise = this.api[this.endpoint].save(this.params, this.entity).$promise;\n      } else { //PUT\n        promise = this.entity.$update(this._getPathParams());\n      }\n      promise.then((response) => {\n        this.isLoading = false;\n        this.$log.info('then', response);\n        this.$log.info('back to state',this.backToState);\n        this.alertService.success(\n          {\n            title:this.translate(this.successTitle),\n            message:this._isNew() ? this.translate(this.successCreateMessage) : this.translate(this.successEditMessage)\n          }\n        );\n        //TODO: arreglar esto poniendo un backToState con los parametros correctos\n        this.goToBackState();\n      }, (err) => {\n        if(err.status === 422){\n          err.data.forEach(data => {\n            form[data.field].$error = {backendError: true};\n            form[data.field].backenMessage = data.message;\n          });\n        } else {\n\n          this.alertService.error({\n            title: this.translate(this.errorTitle),\n            message: err.data.message\n\n          });\n        }\n      });\n      return promise;\n    } else {\n      this.$log.info('form invalid');\n      return undefined;\n    }\n  }\n\n  goToBackState(){\n    this.window.history.back();\n  }\n\n  // Indica si el recurso editado actualemente es el buscado\n  isResourceType(type){\n    return type == this.state.params.resourceType;\n  }\n\n  isAudioResource(){\n    return this.isResourceType(\"audio\");\n  }\n  isSubtitleResource(){\n    return this.isResourceType(\"subtitle\");\n  }\n  isGraphResource(){\n    return this.isResourceType(\"graph\");\n  }\n\n  // Devuelve el endpoint correcto para este recurso\n  getResourceEndpoint(){\n    if(this.isAudioResource())\n      return 'mediaMaterialsAudios';\n    if(this.isSubtitleResource())\n      return 'mediaMaterialsSubtitles';\n    if(this.isGraphResource())\n      return 'mediaMaterialsGraphics';\n  }\n\n  getDetailData(endpoint){\n    this.response = this.api[endpoint].get();\n    this.response.isLoading = true;\n\n    this.response.$promise.then(() => {\n      this.response.isLoading = false;\n    }, () => this.response.isLoading = false);\n\n    return this.response;\n  }\n\n  deleteEntry(entry){\n    // Primero borramos el registro pedido\n    var index = this.entity.items.indexOf(entry);\n    if (index > -1) {\n      this.entity.items.splice(index, 1);\n    }\n    // Si es un audio, ajustamos los demas ids para ocupar el hueco del borrado\n    if(this.isAudioResource()) {\n      for (var i = 0; i < this.entity.items.length; i++) {\n        var currentId = this.entity.items[i].id;\n        if (currentId > entry.id) {\n          this.entity.items[i].id = currentId - 1;\n        }\n      }\n    }\n  }\n\n  validateAndSave(form){\n    // Validamos que todos los campos esten completos\n    for(var i=0; i < this.entity.items.length; i++) {\n      var resource = this.entity.items[i];\n      if (!resource.content || !resource.type || !resource.language) {\n        return false;\n      }\n    }\n    this.save(form);\n  }\n\n  // Calcula el id que debe tomar el nuevo registro\n  getIdForNewEntry(){\n    var maxId = 0;\n    for(var i=0; i < this.entity.items.length; i++){\n      var currentId = this.entity.items[i].id;\n      if(currentId > maxId){\n        maxId = currentId;\n      }\n    }\n    return maxId + 1;\n  }\n\n  addEntryRow(){\n    if(!this.entity.isLoading && this.entity.items){\n      var params = {};\n      if(this.isAudioResource()){\n        params.id = this.getIdForNewEntry();\n        params.original = null;\n      }\n      this.entity.items.push( params );\n    }\n  }\n\n  getResourcesFromApiCall(){\n    if(this.isAudioResource()){\n      this.contents = this.getDetailData('audioContents');\n      this.types = this.getDetailData('audioTypes');\n      this.languages = this.getDetailData('languages');\n    }\n    if(this.isSubtitleResource()){\n      this.contents = this.getDetailData('subtitleContents');\n      this.types = this.getDetailData('subtitleTypes');\n      this.languages = this.getDetailData('languages');\n    }\n    if(this.isGraphResource()){\n      this.contents = this.getDetailData('graphicContents');\n      this.languages = this.getDetailData('languages');\n      this.types = this.getDetailData('graphicTypes');\n    }\n  }\n\n  areResourcesLoading(){\n    return this.isLoading || (!this.entity.items) || (this.contents && this.contents.isLoading) || (this.types && this.types.isLoading) ||\n      (this.languages && this.languages.isLoading);\n  }\n\n}\n\n\n"],"sourceRoot":"/source/"}