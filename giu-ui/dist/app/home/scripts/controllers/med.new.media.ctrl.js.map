{"version":3,"sources":["app/home/scripts/controllers/med.new.media.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.new.media.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor($injector, $state, $location){\n\n    super(\n      {\n        injector:$injector,\n        endpoint:'medias',\n        key:'currentId',\n        backToState:'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params,\n        entityDependencies : [\n          {api: 'status', loading: 'isLoading', model: 'statusList'},\n          {api: 'transmission', loading: 'isLoading', model: 'transmissions'}\n        ]\n      }\n    );  \n    this.state = $state;\n    let mediaId = this.state.params.currentId;\n    if(mediaId){\n      this.setMediaId(mediaId);\n      this.get();\n      this.setToServiceModel('materialByMedia',{'media': this.getMediaId()});\n    }\n    // this.newMediaService.invalidMedia = false;\n    // this.newMediaService.invalidMaterial = false;\n    // this.newMediaService.invalidPlusDetail = false;\n    // this.newMediaService.invalidSegment = false;\n    // this.newMediaService.mediaId=\"FIB1-TX-1324560-148068-21\"\n  }\n\n  nextStep(){\n    this.api['medias'].get({'currentId':this.getMediaId()}).$promise.then((response)=>{\n      this.setToServiceModel('media',response);\n    });\n    this.setToServiceModel('materialByMedia',{'media': this.getMediaId()});\n    this.newMediaService.invalidMedia = false;\n    super.nextStep();\n  }\n\n  saveAndNextStep(form){\n    if(this._isNew()){\n      super.saveAndNextStep(form);\n    } else {\n      this.nextStep();\n    }\n  }\n\n  _getPathParams() {\n    let pathParams = this.params;\n    angular.extend(pathParams, this._addParams());\n    return pathParams;\n  }\n\n  validType(that){\n    if(!this){\n      that.entity.type = undefined;\n      return false;\n    }\n    if(!this.itemSelected){\n      that.entity.type = undefined;\n      return false;\n    }\n    if(!this.itemSelected.id){\n      that.entity.type = undefined;\n      return false;\n    }\n    let self = this;\n    let mediaType = this.elements.content.find(it =>{\n       return it.id === self.itemSelected.id;\n    });\n    that.entity.transmitionEnabled = mediaType.mandatoryTranssimisionEnable;\n    that.entity.type = self.itemSelected.id;\n  }\n\n  bindFormat(that){\n    if(!this){\n      that.entity.format = undefined;\n      return false;\n    }\n    if(!this.itemSelected.id){\n      that.entity.format = undefined;\n      return false;\n    }\n    that.entity.format = this.itemSelected.id;\n  }\n\n  formIsEmpty(form){\n    if(!this.entity){\n      return true;\n    }\n    if(!this.entity.format || !this.entity.type || !this.typeInput || !this.formatInput){\n      return true;\n    }\n  }\n  \n  expression(item) {\n    return item.id + ' - ' + item.description;\n  }\n\n  condition(item, query) {\n    return item.id.indexOf(query.toUpperCase()) > -1 || item.description.indexOf(query.toUpperCase()) > -1;\n  }\n}\n"],"sourceRoot":"/source/"}