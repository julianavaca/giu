{"version":3,"sources":["app/home/scripts/controllers/med.search.results.detail.resources.audios.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,gFAAgF,CAAC,gDAAgD,UAAU,SAAS;EAApK;EAEE,IAAI,UACe;EAAnB,OAAO;IACL,SAAS,CAAC,UAAU,uCAAuC;MACzD,WAAW,sCAAsC;;IAEnD,SAAS,YAAY;MAJJ,0BAAuB,CAAA,YAAA;;;;;QAG/B,SAHQ,wBAIjB,KACA,QACA,WACA,kBAAiB;UAGX,aAAa,eAAe,MAVjB;;UAUjB,KAAK,MAAM;UACX,KAAK,QAAQ;UACb,KAAK,mBAAmB;UACxB,KAAK,sBAAsB,EAAC,SAAS;UACrC,KAAK,gBAAgB,IAAI,SACvB;YACE,UAAU;YACV,UAAU;YACV,QAAQ,OAAO;YACf,YACA;cACE,SAAS;cACT,SAAS;cACT,kBAAkB;;YAEpB,YAAY;;UAGhB,KAAK;;;QAED,aAAa,YA9BA,yBAAuB,CAAA;UA+BlC,KAAK;UACL,OADG,SAAA,cAAE;YACX,KAAK,MAAM,GAAG,2CAA2C,EAAC,IAAI,KAAK,MAAM,OAAO,IAAI,cAAc;;WAG3F;UACD,KAAK;UACL,OAFE,SAAA,WAAC,UAAS;YAClB,OAAO,SAAS,QAAQ,SAAS,KAAK;;WAI/B;UACD,KAAK;UACL,OAHH,SAAA,QAAE;YAIG,IAAI,QAAQ;;YAHpB,IAAG,CAAC,KAAK,MAAM,OAAO,IAAG;cACvB;;YAEF,KAAK,UAAU,CACb;cACE,OAAM;cACN,SAAS,KAAK,iBAAiB,UAAU;cACzC,MAAM;cACN,QAAQ,SAAA,SAAM;gBAAC,MAAK;;cACpB,MAAK,KAAK;;YAGd,KAAK,cACF,MACA,SACA,KACC,UAAC,UAAY;cACX,MAAK,oBAAoB,QAAQ,CAAC,SAAS,oBAAoB,SAAS;cACxE,MAAK,QAAQ;gBACX,SAAS,YAAY,SAAS;gBAC9B,QAAQ,EAAC,OAAO,SAAS;;;;WAK1B;UACD,KAAK;UACL,OAAA,SAAA,WAAE;YACR,IAAG,CAAC,KAAK,cAAc,MAAM;cAC3B,OAAO;;YAET,IAAG,CAAC,KAAK,cAAc,KAAK,OAAO;cACjC,OAAO;;YAET,OAAO,KAAK;;;QAGR,OA7Ea;;;MAgFf,QAAQ,WAhFO;;;GAmFlB","file":"app/home/scripts/controllers/med.search.results.detail.resources.audios.ctrl.js","sourcesContent":["'use strict';\nimport Pageable from 'module-crud-ui/app/scripts/crud.pageable.js';\n\nexport default class SearchResultsDetailCtrl {\n\n  /*@ngInject*/\n  constructor(\n    api,\n    $state,\n    $injector,\n    translateService){\n\n\n    this.api = api;\n    this.state = $state;\n    this.translateService = translateService;\n    this.isNotVirtualSegment = {'value': false};\n    this.audioPageable = new Pageable(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterialsAudios',\n        params: $state.params,\n        selectable:\n        {\n          itemKey: 'id',\n          enabled: true,\n          allowMultiSelect: false\n        },\n        executeGet: false\n      }\n    );\n    this._init();\n  }\n\n  onAudioEdit(){\n    this.state.go('searchResults.detail.mediaResourcesEdit', {id: this.state.params.id, resourceType: 'audio'});\n  }\n\n  isEditable(pageable){\n    return pageable.page && pageable.page.isEditable;\n  }\n\n  _init(){\n    if(!this.state.params.id){\n      return;\n    }\n    this.actions = [\n      {\n        roles:'MMMU',\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: () => {this.onAudioEdit();},\n        show:this.isNotVirtualSegment\n      }\n    ];\n    this.audioPageable\n      .get()\n      .$promise\n      .then(\n        (response) =>{\n          this.isNotVirtualSegment.value = !response.isVirtualSegment && response.isMediaMaterialEnabled;\n          this.audit = {\n            enabled: response && response.audit,\n            entity: {audit: response.audit}\n          };\n        }\n    );\n\n  }\n\n  getAudit(){\n    if(!this.audioPageable.page) {\n      return false;\n    }\n    if(!this.audioPageable.page.audit) {\n      return false;\n    }\n    return this.audit;\n  }\n\n}\n"],"sourceRoot":"/source/"}