{"version":3,"sources":["app/home/scripts/controllers/med.search.results.tabs.ratings.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.search.results.tabs.ratings.ctrl.js","sourcesContent":["'use strict';\n\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n/* global angular, console */\n\n\nexport default class SearchResultsTabsRatingsCtrl  extends Saveable{\n\n  /*@ngInject*/\n  constructor($injector,api, $state,translateService,$filter){\n    super(\n      {\n        injector:$injector,\n        endpoint:'mediaRatings',\n        backToState: \".\",\n        key:'id',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage:'common.alert.edit.success.title',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params:$state.params\n      }\n    );\n    this.api = api;\n    this.state = $state;\n    this.filter = $filter;\n    this.translateService = translateService;\n    if(this.state.params.id){\n      this._load();\n    }\n  }\n\n  expressionCountryZone(item) {\n    return item.id + ' - ' + item.description;\n  }\n  \n  expression(item) {\n    return item.id;\n  }\n  \n  condition(item,query) {\n    if(query === null){\n      query = \"\";\n    }\n    return item.id.indexOf(query.toUpperCase()) > -1 || item.description.indexOf(query.toUpperCase()) > -1;\n  }\n\n  createParams(rating){\n    if(rating.country){\n      rating.paramClasification = {\n        'ratingDetails':rating.country.id,\n        'type':'C'};\n      rating.paramGenre = {\n        'ratingDetails':rating.country.id,\n        'type':'G'};\n      rating.paramDisclaimer = {\n        'ratingDetails':rating.country.id,\n        'type':'D'};\n      if(!rating.markOfNew){\n        if(rating.originCountry === undefined){\n          rating.originCountryNull = true;\n        }\n        if(rating.edited === undefined){\n          rating.editedNull = true;\n        }\n        if(rating.provisory === undefined){\n          rating.provisoryNull = true;\n        }\n      }\n    }\n  }\n\n  changeCountry(rating,item){\n    if(rating.country&&item){\n      if(rating.country.id===item.id){\n        return;\n      }\n    }\n    rating.clasification = null;\n    rating.genre = null;\n    rating.disclaimer = [];\n    rating.plainDisclaimer = undefined;\n\n    if(!item){\n      return;\n    }\n    if(!rating.paramClasification&&!rating.paramGenre&&!rating.paramDisclaimer){\n      rating.paramClasification = {\n        'ratingDetails':item.id,\n        'type':'C'};\n      rating.paramGenre = {\n        'ratingDetails':item.id,\n        'type':'G'};\n      rating.paramDisclaimer = {\n        'ratingDetails':item.id,\n        'type':'D'};\n      return;\n    }\n    rating.paramClasification.ratingDetails = item.id;\n    rating.paramGenre.ratingDetails = item.id;\n    rating.paramDisclaimer.ratingDetails = item.id;\n  }\n\n  deleteRating(rating){\n    // Primero borramos el registro pedido\n    var index = this.entity.items.indexOf(rating);\n    if (index > -1) {\n      this.entity.items.splice(index, 1);\n    }\n  }\n\n  createRating(){\n    let ratingToInsert = {\n      country: undefined,\n      clasification: undefined,\n      genre: undefined,\n      disclaimer: undefined,\n      originCountry: undefined,\n      edited: undefined,\n      provisory: undefined,\n      comments:undefined,\n      markOfNew:true,\n      queryCountries:'',\n      queryClasification:'',\n      queryGenre:''\n    };\n    this.entity.items.push(ratingToInsert);\n  }\n\n  setParamsDisclaimer(rating){\n    this.state.params.ratingDetails = rating.country.id;\n    this.state.params.type='D';\n  }\n\n  _load(){\n    this.tabla = [{label:'Id',key:'id'},{label:'Description',key:'description'}];\n    this.ratingsEdit = {value:false};\n    this.ratingsEditShow = {value:false};\n    this.param = {ratingDetails:''};\n    this.audit = {\n      enabled: false,\n      entity: {audit:''}\n    };\n    this.actions = [\n      {\n        roles:'MMMU',\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: () => {this.ratingsEdit.value = !this.ratingsEdit.value;\n          this.ratingsEditShow.value = !this.ratingsEditShow.value;\n          this.oldValue = this.copy(this.entity);\n        },\n        show: this.ratingsEditShow\n      },\n      {\n        roles:'MMMU',\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: () => {this.createRating();},\n        show: this.ratingsEdit\n      }\n    ];\n    this.get();\n  }\n\n\n  get(){\n    super\n      .get()\n      .$promise\n      .then((response) => {\n        this.ratingsEditShow.value = response.isMediaMaterialEnabled && !response.isVirtualSegment;\n        this.entity = response;\n\n        this.audit.enabled = response && response.audit;\n        this.audit.entity.audit = response.audit;\n\n        if(this.entity.items.length > 0){\n          this.entity.items.forEach(\n              it => {\n              if(it.originCountry === null){\n                it.originCountry = undefined;\n              }\n              if(it.edited === null){\n                it.edited=undefined;\n              }\n              if(it.provisory === null){\n                it.provisory = undefined;\n              }\n              if(it.disclaimer !== null){\n                it.plainDisclaimer = it.disclaimer.id;\n                it.disclaimer = it.disclaimer.id.split(',').map(mp => { return {id: mp};});\n              }else{\n                it.plainDisclaimer=\"\";\n              }\n            }\n          );\n        } else {\n          this.createRating();\n        }\n\n\n      });\n  }\n\n  getAudit(){\n    if(!this.entity){\n      return false;\n    }\n    if(!this.entity.audit) {\n      return false;\n    }\n    return this.audit;\n  }\n\n  saveRatings(form){\n    if(this.validateFieldRatings()){\n      this.entity.items.forEach(it => {\n        if(it.disclaimer){\n          let id = it.disclaimer.map(mp => mp.id).join();\n          it.disclaimer = {id: id, description:''};\n        }\n      });\n      this.cleanFieldSelected();\n      this.save(form).then(\n        () => this.cancel()\n      );\n    }else{\n      this.alertService.error({\n        title: this.translate('ratings.edit.alert.error'),\n        message: this.translate('ratings.med.search.result.tabs.ratings.message')\n      });\n    }\n  }\n\n  cleanFieldSelected(){\n    this.entity.items.forEach(it => {\n      delete it.queryCountries;\n      delete it.queryClasification;\n      delete it.queryGenre;\n      delete it.paramClasification;\n      delete it.paramGenre;\n      delete it.paramDisclaimer;\n      delete it.plainDisclaimer;\n      delete it.markOfNew;\n      delete it.originCountryNull;\n      delete it.provisoryNull;\n      delete it.editedNull;\n      delete it.disclaimers;\n      if(!it.disclaimer){\n        it.disclaimer = null;\n      }else if (it.disclaimer.id ===''){\n        it.disclaimer = null;\n      }\n    });\n  }\n\n  validateFieldRatings(){\n    let valid = true;\n    this.entity.items.forEach(\n      it => {\n        if(it.country === undefined || it.clasification === undefined ||\n          it.country === null || it.clasification === null){\n          valid = false;\n        }\n      });\n    return valid;\n  }\n\n  copy(value){\n    return angular.copy(value);\n  }\n\n  cancel() {\n    this.ratingsEdit.value = false;\n    this.ratingsEditShow.value = !this.ratingsEditShow.value;\n    this.get();\n  }\n}\n"],"sourceRoot":"/source/"}