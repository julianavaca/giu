{"version":3,"sources":["app/home/scripts/controllers/med.new.media.material.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.new.media.material.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaMaterialCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor($injector, $state, $scope) {\n\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterials',\n        key: 'id',\n        backToState:'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params,\n        entityDependencies: [\n          {api: 'technicalsState', loading: 'isLoadingTechnicalsState', model: 'etcs'}\n        ]\n      }\n    );\n    this.state = $state;\n    this.scope = $scope;\n    this.entity = {};\n    this.entity.media = {};\n    this.entity.material = {};\n    this.entity.material.chapter = {};\n    this.tabla = [{ label: 'Id', key: 'id' }, { label: 'Description', key: 'description' }];\n\n    let self = this;\n    this.scope.$watch(() => this.entity.chapterList, (newValue) => {\n      if (newValue){\n        self.chapterList = angular.copy(self.entity.chapterList);\n        self.chapterList.sort((a,b) => a.id - b.id );\n        self.entity.chapterList = undefined;\n      }\n    });\n\n  }\n  \n  materialsPermitedExceeded(){\n    if(this.getFromModel('media')){\n      return !(this.getFromModel('media').maximumMediaMaterials > this.getFromModel('media').materialsAccount);\n    }\n    return false;\n  }\n\n  nextStep(){\n    this.setResourceOnModel('aspectsRatio','aspectRatios', 'content');\n    this.setResourceOnModel('setOfTapesCurrent','setOfTapes');\n    this.setResourceOnModel('mediaSegments','mediaSegments');\n    this.getMediaMaterialCreated();\n    this.setToServiceModel(\"defaultTechnicalStateId\", this.entity.technicalState.id);\n    this.newMediaService.invalidMaterial = false;\n    super.nextStep();\n   }\n\n  updateTechnicalState(){\n    if(!this.existsKey(\"technicalState\")){\n      this.setToServiceModel(\"technicalState\", this.entity.technicalState);\n    }\n  }\n\n  setResourceOnModel(endpoint, keyForModel, attr){\n    this.api[endpoint].get({'id':this.newMediaService.mediaId}).$promise.then((response)=>{\n      if(attr){\n        this.newMediaService.setToModel(keyForModel, response[attr]);\n      } else {\n        this.newMediaService.setToModel(keyForModel, response);\n      }\n    });\n  }\n\n  getMediaMaterialCreated(){\n    this.api.mediaMaterials.get({'id':this.newMediaService.mediaId}).$promise.then((response)=>{\n        this.newMediaService.setToModel(\"mediaMaterials\", response);\n        this.entity.cid = response.cid;\n        let materialByMedia = this.getFromModel('materialByMedia');\n        materialByMedia.material = this.entity;\n    });\n  }\n\n  saveAndExit(form){\n    this.entity.media.id = this.getMediaId();\n    if(this.materialsPermitedExceeded()){\n      this.$state.go(this.backToState.state, {'id': this.getMediaId()}, { reload: true });\n    } else {\n      super.saveAndExit(form);\n    }\n  }\n  saveAndNextStep(form){\n    this.entity.media.id = this.getMediaId();\n    super.saveAndNextStep(form);\n  }\n\n  callbackfunction(model){\n    model.entity.material.title = this.target.title;\n    model.entity.material.chapter = {};\n    model.entity.material.chapter.title = this.target.chapterTitle;\n    model.entity.material.chapter.episode = {'id' : this.target.episodeId};\n    model.entity.material.id = this.target.id;\n    model.entity.material.chapter.id = parseInt(this.target.chapterId);\n\n    if(model.entity.material != undefined && model.entity.material.id != undefined){\n      let params = {'materialId': model.entity.material.id,\n        'mediaId':model.newMediaService.mediaId};\n      let response = this.api.chapters.get(params);\n      response.isLoading = true;\n\n      response.$promise.then(\n        (response) => {\n          model.entity.chapterList = response.content;\n        },\n\n        (error) => {\n          response.isLoading = false;\n        }\n      );\n    }\n  }\n\n  changefunction(model){\n    model.entity.material.title = undefined;\n    model.entity.material.chapter = {};\n    model.entity.material.chapter.episode = {};\n    model.entity.material.id = this.target.id;\n    let params = {'materialId': model.entity.material.id,\n                  'mediaId':model.newMediaService.mediaId};\n    if(model.entity.material.id !== undefined){\n      let response = this.api.chapters.get(params);\n      let responseMaterialDetail = this.api.materials.get(params);\n\n      response.isLoading = true;\n      responseMaterialDetail.$promise.then(\n        (response) => {\n          model.entity.material.title = response.title;\n        }\n      );\n      response.$promise.then(\n        (response) => {\n          model.entity.chapterList = response.content;\n        },\n        (error) => {\n          response.isLoading = false;\n        }\n      );\n    }\n  }\n\n  updateMaterialForm() {\n    let chapterNumber = parseInt(this.entity.material.chapter.id);\n    let selectedChapter = this.chapterList.find(item =>  item.id === chapterNumber );\n    if (selectedChapter != undefined) {\n      this.entity.material.chapter = {};\n      this.entity.material.chapter.title = selectedChapter.title;\n      this.entity.material.chapter.episode = {'id' : selectedChapter.episode.id};\n      this.entity.material.chapter.id = parseInt(selectedChapter.id);\n      if(selectedChapter.hasRelatedMedias){\n        swal({\n            title: this.translate('new.media.material.hasRelatedMedias.title'),\n            text: this.translate('new.media.material.hasRelatedMedias.message'),\n            showCancelButton: false,\n            confirmButtonText: 'Ok',\n            type: 'warning',\n            closeOnConfirm: true,\n            showLoaderOnConfirm: true\n          });\n      }\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}