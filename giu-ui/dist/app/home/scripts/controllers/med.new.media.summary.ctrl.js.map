{"version":3,"sources":["app/home/scripts/controllers/med.new.media.summary.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,2DAA2D,CAAC,gDAAgD,UAAU,SAAS;EAA/I;EAEE,IAAI,UACe;EAAnB,OAAO;IACL,SAAS,CAAC,UAAU,uCAAuC;MACzD,WAAW,sCAAsC;;IAEnD,SAAS,YAAY;;gFAJJ,sBAAmB,CAAA,UAAA,WAAA;QAMhC,aAAa,SANA,qBAAmB;;;;QAG3B,SAHQ,oBAGP,WAAW,QAAQ,SAAQ;UAQ/B,aAAa,eAAe,MAXjB;;UAKjB,aAAA,IAAA,OAAA,eALiB,oBAAmB,YAAA,eAAA,MAAA,KAAA,MAMlC;YACE,UAAS;YACT,UAAS;YACT,aAAY;YACZ,KAAI;YACJ,cAAc;YACd,gBAAgB;YAChB,sBAAsB;YACtB,oBAAoB;YACpB,YAAY;YACZ,YAAY;YACZ,QAAQ,OAAO;;;UAInB,KAAK,QAAQ;UACb,KAAK,SAAS;UACd,KAAK,UAAU,KAAK,MAAM,OAAO;UACjC,KAAK;;;QASD,aAAa,YAjCA,qBAAmB,CAAA;UAkC9B,KAAK;UACL,OARA,SAAA,WAAE;YASA,IAAI,QAAQ;;YARpB,KAAK,WAAW,KAAK,IAAI,UAAU,IAAI,EAAC,aAAa,KAAK,OAAO,OAAO;YACxE,KAAK,SAAS,YAAY;YAC1B,IAAI,aAAa,KAAK;;YAEtB,KAAK,SAAS,SAAS,KAAK,UAAC,UAAa;;cAExC,WAAW,YAAY;cACvB,WAAW,QAAQ;cACnB,MAAK,QAAQ;eAEZ,UAAS,OAAO;;cAEjB,IAAG,MAAM,UAAU,KAAI;gBACrB,WAAW,QAAQ;gBACnB,WAAW,YAAY;;;;WAapB;UACD,KAAK;UACL,OAVG,SAAA,cAAE;YACX,IAAI,gBAAgB,KAAK,MAAM,OAAO,GAAG,MAAM;YAC/C,IAAI,UAAU,EAAC,WAAY,cAAc;YACzC,KAAK,MAAM,GAAG,iBAAiB;;WAYxB;UACD,KAAK;UACL,OAXG,SAAA,cAAE;YACX,KAAK,MAAM,GAAG,YAAY,EAAC,aAAc,KAAK,MAAM,OAAO;;WAapD;UACD,KAAK;UACL,OAZS,SAAA,oBAAE;YACjB,IAAG,KAAK,OAAO,SAAQ;cACrB,OAAO,KAAK,OAAO,QAAQ,UAAU;;YAEvC,OAAO;;WAcA;UACD,KAAK;UACL,OAbiB,SAAA,4BAAE;YACzB,IAAG,KAAK,UAAU,KAAK,OAAO,WAAW,KAAK,SAAS,KAAK,MAAM,uBAAsB;cACtF,OAAO,EAAE,KAAK,MAAM,wBAAwB,KAAK,OAAO,QAAQ;;YAElE,OAAO;;;QAgBH,OApFa;SAA4B;;MAuF3C,QAAQ,WAvFO;;;GA0FlB","file":"app/home/scripts/controllers/med.new.media.summary.ctrl.js","sourcesContent":["'use strict';\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\nexport default class NewMediaSummaryCtrl extends Saveable {\n\n  /*@ngInject*/\n  constructor($injector, $state, $window){\n\n    super(\n      {\n        injector:$injector,\n        endpoint:'mediaMediaMaterials',\n        backToState:'.',\n        key:'id',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: true,\n        params: $state.params\n      }\n    );\n\n    this.state = $state;\n    this.window = $window;\n    this.mediaId = this.state.params.id;\n    this.getMedia();\n  }\n\n  getMedia(){\n    this.response = this.api['medias'].get({'currentId': this.$state.params.id});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.media = response;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n  }\n\n  goToDetails(){\n    var mediaMaterial = this.state.params.id.split('-');\n    let mediaId = {'mediaId' : mediaMaterial[2] };\n    this.state.go('searchResults', mediaId);\n  }\n\n  addMaterial(){\n    this.state.go('newMedia', {'currentId' : this.state.params.id});\n  }\n\n  hasMediaMaterials(){\n    if(this.entity.content){\n      return this.entity.content.length == 0;\n    }\n    return false;\n  }\n\n  materialsPermitedExceeded(){\n    if(this.entity && this.entity.content && this.media && this.media.maximumMediaMaterials){\n      return !(this.media.maximumMediaMaterials > this.entity.content.length);\n    }\n    return false;\n  }\n\n}\n"],"sourceRoot":"/source/"}