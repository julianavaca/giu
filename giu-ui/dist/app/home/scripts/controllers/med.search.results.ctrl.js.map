{"version":3,"sources":["app/home/scripts/controllers/med.search.results.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.search.results.ctrl.js","sourcesContent":["'use strict';\n\nimport Pageable from 'module-crud-ui/app/scripts/crud.pageable.js';\nimport {optional} from 'module-crud-ui/app/scripts/crud.optional.js';\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\n\n/* global angular */\n\nexport default class SearchResultsCtrl extends Pageable {\n\n  /*@ngInject*/\n  constructor($injector, $state, $filter, alertService,$mdDialog,translateService,api,$scope,authorityService) {\n\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterialsList',\n        selectable:{\n          itemKey: 'cid',\n          enabled:true,\n          params: $state.params\n        },\n        executeGet: false\n      }\n    );\n    this.translateService=translateService;\n    this.mdDialog = $mdDialog;\n    this.api = api;\n    this.filter = $filter;\n    this.alert = alertService;\n    this.state = $state;\n    this.authorityService = authorityService;\n    this.scope=$scope;\n    this.desactivate = {'value': false};\n    this.activate = {'value': false};\n    this.showCreate = {'value': false};\n    this.getAcces();\n    this.selectFirstElement();\n    this.materialTitles = new Saveable({\n      injector: $injector,\n      executeGet: false,\n      endpoint: 'materialTitles',\n      backToState: \".\",\n      key: 'materialId',\n      params: {}\n    });\n    this.chapterTitles = new Saveable({\n      injector: $injector,\n      executeGet: false,\n      endpoint: 'chapterTitles',\n      backToState: \".\",\n      key: 'chapterId',\n      params: {}\n    });\n    this.backParams = {};\n    angular.copy(this.state.params, this.backParams);\n    this.backParams.searchTab = 1;\n    this.actions = [\n      {\n        enabled:true,\n        tooltip: this.filter('translate')('tooltip.search'),\n        action: () => { this.state.go('search', this.backParams); },\n        icon: 'arrow-left'\n      },\n      {\n        roles:'MMMU',\n        enabled:true,\n        tooltip: this.filter('translate')('tooltip.create'),\n        action: () => { this.state.go('newMedia', {'currentId': this.state.params.currentId}); },\n        icon: 'plus',\n        show: this.showCreate\n      }\n    ];\n    this.contextMenu = [\n      {\n        roles:'MMMC',\n        label: this.translateService.translate('results.alert.deactivate.label'),\n        action: () => {\n          this.deactivateMediaMat(this.page.content[this.selected]);\n        },\n        show: this.desactivate\n      },\n      {\n        roles:'MMMC',\n        label: this.translateService.translate('results.alert.activate.label'),\n        action: () => {\n          this.activateMediaMat(this.page.content[this.selected]);\n        },\n        show: this.activate\n      },\n      {\n        roles:'MMMC',\n        label: this.translateService.translate('med.copy'),\n        action: () => {\n          this.openCopyMenu();\n        },\n        show: this.desactivate\n      },\n      {\n        roles:'MMMR',\n        label: this.translateService.translate('med.title.translate'),\n        action: () => {\n          this.translateTitleDialog();\n        },\n        show: this.desactivate\n      },\n      {\n        roles:'MMMR',\n        label: this.translateService.translate('med.chapter.title.translate'),\n        action: () => {\n          this.translateChapterTitleDialog();\n        },\n        show: this.desactivate\n      }\n    ];\n\n    this.search = {\n      enabled:true,\n      param: {chapterId: this.state.params.chapterId},\n      paramName: 'chapterId',\n      placeholder: this.filter('translate')('results.material.search.placeholder'),\n      submit: () => { this.get(); },\n      close: () => { this.removeSpecificParamsAndResetPage(['chapterId']).get(); }\n    };\n    this.params = this.search.param;\n    this._observe();\n  }\n\n  initEdit(){\n    this.state.params.chapterId = this.page.content[this.selected].chapter.id;\n  }\n\n  getAcces(){\n    var roles = ['MMRR'];\n    this.allowed=false;\n    this.authorityService\n      .getUser()\n      .then(() => {\n        this.allowed = this.authorityService.containsAll(roles);\n      });\n  }\n\n  //************************** feature-copy **************************\n  setParamsToCopy(){\n    this.state.params.idtarget=this.copyTarget;\n    this.entity={\"mediaMaterial\":\n                  {\n                    \"id\":this.copyOrigin\n                  },\n                  \"hasSegments\":this.copySegment\n                };\n  }\n\n  buildMessage(response){\n\n    if(response.hasAudios){\n      this.message=this.message+'Audios ';\n    }\n    if(response.hasGraphics){\n      this.message=this.message+'Graphics ';\n    }\n    if(response.hasSubtitles){\n      this.message=this.message+'Subtitles ';\n    }\n    if(response.hasRejections){\n      this.message=this.message+'Rejections ';\n    }\n    if(this.copySegment){\n      if(response.hasSegments){\n        this.message=this.message+'Segments Hotstart ';\n        if(response.hasSqueezeCredits){\n          this.message=this.message+'Squeeze Credits ';\n        }\n      }\n      if(response.hasRatings){\n        this.message=this.message+'Ratings ';\n      }\n    }\n\n    if(response.hasAudios||response.hasGraphics||response.hasSubtitles||response.hasRejections||(this.copySegment&&(response.hasSegments||response.hasRatings))){\n      this.message=\"If you continues, you'll overwrite data of \"+this.message;\n    }else{\n      this.message=\"If you continues, you'll write data of Audios, Graphics, Subtitles, Rejections\";\n      if(this.copySegment){\n        this.message=this.message+', Segments, Hotstart, Squeeze Credits and Ratings';\n      }\n    }\n  }\n\n  openCopyMenu(ev){\n    let self =this;\n    self.copyOrigin = self.page.content[self.selected].id;\n\n    this.mdDialog\n      .show(\n        {\n          controller: ($scope, $mdDialog) => {\n            $scope.vm = self;\n          },\n          templateUrl:'home/views/med.copy.html',\n          parent: angular.element(document.body),\n          targetEvent: ev,\n          clickOutsideToClose: true\n        }\n      );\n  }\n\n  submit($event){\n    let self =this;\n    this.setParamsToCopy();\n\n    this.api.copyMediaMaterialsCurrent\n      .get(this.state.params)\n        .$promise\n          .then((response) => {\n\n            this.message=\"\";\n            this.buildMessage(response);\n             this.alert.dismissable({\n             title: this.filter('translate')('med.copy.alert.dismissable.title'),\n             message: this.message\n             },\n             ()=>{\n             this.copyMediaMaterial();\n             });\n          },(err)=>{\n            this.cancelCopy();\n          });\n\n    this.closeCopy();\n    $event.preventDefault();\n  }\n\n  copyMediaMaterial(){\n    this.api.copyMediaMaterials\n      .save(this.state.params, this.entity)\n      .$promise\n      .then(() => {\n        this.alert.success({\n          title: this.filter('translate')('med.copy.post.alert.success.title'),\n          message: this.filter('translate')('med.copy.post.alert.success.message')\n        });\n        this.state.go(this.state.current, {}, {reload: true});\n      }, (err) => {\n        this.alert.error({\n          title: this.filter('translate')('med.copy.post.alert.error.title'),\n          message: this.filter('translate')('med.copy.post.alert.error.message')\n        });\n      });\n  }\n\n  cancelCopy(){\n    this.alert.error({\n      title: this.filter('translate')('med.copy.post.alert.error.title'),\n      message: this.filter('translate')('med.copy.post.alert.error.message.cancel')\n    });\n  }\n  closeCopy(){\n    this.mdDialog.hide();\n  }\n  //************************** end-feature-copy **************************\n  _observe() {\n    this.scope.$watch(() => this.page.content, (newValue) => {\n      if (newValue){\n        this.selectedChange(this.findMediaMateria(this.page.content));\n      }\n    });\n  }\n\n  selectFirstElement() {\n    this.get().$promise.then((response) => {\n      this.selected = this.findMediaMateria(response.content);\n      this._goDetail();\n    });\n  }\n\n  findMediaMateria(collection){\n    let indx = collection.findIndex((it) => it.id==this.state.params.id);\n    if(indx>-1){\n      return indx;\n    }\n    return 0;\n  }\n\n  selectedChange(index) {\n    this.selected = index;\n    this._goDetail();\n  }\n\n  _goDetail(){\n    let params={\n      id:undefined,\n      currentId:undefined,\n      mediaMaterialListPage:0,\n      mediaMaterialListMax:0\n    };\n    if(this.page.content.length > 0){\n      this.selectedObj=this.page.content[this.selected];\n      params.id = this.page.content[this.selected].id;\n      params.currentId=this.page.content[this.selected].media.id;\n      params.mediaMaterialListMax=this.page.size;\n      params.mediaMaterialListpage=this.page.number;\n      this.desactivate.value = this.page.content[this.selected].isEnable || false;\n      this.activate.value = (!this.page.content[this.selected].isEnable && this.page.content[this.selected].media.status.type != 'A') || false;\n      this.showCreate.value = this.page.content[this.selected].media.status.type == 'V';\n      this.warning = !this.page.content[this.selected].material;\n    }else{\n      this.warning = false;\n    }\n    this.state.go('searchResults.detail',params);\n  }\n\n  deactivateMediaMat(mediaMat){\n    let self = this;\n    this.alert.warning(\n      {\n        title: this.filter('translate')('results.alert.deactivate.title'),\n        message: this.filter('translate')('results.alert.deactivate.message')\n      },\n      () => {\n        let paramsAux = {\n          id : this.page.content[this.selected].id\n        };\n        let entityAux = {\n          isEnable : false\n        };\n        this.api.mediaMaterials.update(paramsAux, entityAux).$promise.then(()=>{\n          this.alert.success(\n            {\n              title:this.filter('translate')('results.alert.deactivate.success.title'),\n              message:this.filter('translate')('results.alert.deactivate.success.message')\n            }\n          );\n          self.get().$promise.then(()=>{\n              self._selectContextMenu0();\n            });\n          });\n\n      }\n    );\n  }\n\n\n  activateMediaMat(mediaMat){\n    let self = this;\n    this.alert.warning(\n      {\n        title: this.filter('translate')('results.alert.activate.title'),\n        message: this.filter('translate')('results.alert.activate.message')\n      },\n      () => {\n        let paramsAux = {\n          id : this.page.content[this.selected].id\n        };\n        let entityAux = {\n          isEnable : true\n        };\n\n        this.api.mediaMaterials.update(paramsAux, entityAux).$promise.then(()=> {\n          this.alert.success(\n            {\n              title: this.filter('translate')('results.alert.activate.success.title'),\n              message: this.filter('translate')('results.alert.activate.success.message')\n            }\n          );\n          self.get().$promise.then(()=>{\n            self._selectContextMenu0();\n          });\n        });\n      }\n    );\n  }\n\n  get(){\n    let promise = super.get();\n    let hasMedias = this.hasMedias;\n    promise.$promise.then((response) => {\n      this.warning = hasMedias(response.content);\n      });\n    return promise;\n  }\n\n  hasMedias(materials){\n    return materials.every( elem => elem.id !== undefined && elem.id !== null  );\n  }\n\n  //TODO: partofgame...\n\n/* Translate Title Dialog */\n  translateTitleDialog(){\n    if(this.state.params.id){\n      let self = this;\n\n      this.materialTitles.$state.params.materialId = this.page.content[this.selected].material.id;\n      this.materialTitles.params.materialId= this.page.content[this.selected].material.id;\n\n\n      this.materialTitles.get();\n\n      let ttDialog = this.mdDialog.alert({\n        controller: ($scope, $mdDialog) => {\n          $scope.vm = self;\n        },\n        templateUrl: 'home/views/med.translate.title.html',\n        parent: angular.element(document.body),\n        clickOutsideToClose: true\n      });\n\n      this.mdDialog\n        .show( ttDialog );\n    }\n  }\n\n  selectTranslation(newTitleValue){\n    this.page.content[this.selected].material.title = newTitleValue;\n    this.mdDialog.hide();\n  }\n  \n  /* Translate Chapter Title Dialog */\n  translateChapterTitleDialog(){\n    if(this.state.params.id) {\n      let self = this;\n\n      this.chapterTitles.$state.params.materialId= this.page.content[this.selected].material.id;\n      this.chapterTitles.$state.params.chapterId= this.page.content[this.selected].material.chapter.id;\n\n      this.chapterTitles.params.materialId = this.page.content[this.selected].material.id;\n      this.chapterTitles.params.chapterId = this.page.content[this.selected].material.chapter.id;\n\n      this.chapterTitles.get();\n      let ttDialog = this.mdDialog.alert({\n        controller: ($scope, $mdDialog) => {\n          $scope.vm = self;\n        },\n        templateUrl: 'home/views/med.translate.chapter.title.html',\n        parent: angular.element(document.body),\n        clickOutsideToClose: true\n      });\n      this.mdDialog\n        .show(ttDialog)\n    }\n  }\n\n  selectChapterTranslation(newTitleValue){\n    this.page.content[this.selected].material.chapter.title = newTitleValue;\n    this.mdDialog.hide();\n  }\n\n  addMaterial(){\n    this.state.go('newMedia', {'currentId' : this.state.params.currentId});\n  }\n\n  _selectContextMenu0(){\n    this.state.go(this.state.current, {}, {reload: true});\n  }\n\n}\n"],"sourceRoot":"/source/"}