{"version":3,"sources":["app/home/scripts/controllers/med.search.results.detail.resources.graphics.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,kFAAkF,CAAC,iDAAiD,gDAAgD,UAAU,SAAS;EAAvN;;EAGE,IAAI,YAAY,UAEG;EADnB,OAAO;IACL,SAAS,CAAC,UAAU,yCAAyC;MAC3D,aAAa,wCAAwC;OACpD,UAAU,uCAAuC;MAClD,WAAW,sCAAsC;;IAEnD,SAAS,YAAY;MALJ,0BAAuB,CAAA,YAAA;;;;;QAG/B,SAHQ,wBAGP,KAAK,QAAQ,WAAW,kBAAiB;UAQ7C,aAAa,eAAe,MAXjB;;UAKjB,KAAK,MAAM;UACX,KAAK,QAAQ;UACb,KAAK,sBAAsB,EAAC,SAAS;UACrC,KAAK,mBAAmB,IAAI,SAC1B;YACE,UAAU;YACV,UAAU;YACV,QAAQ,OAAO;YACf,YACE;cACE,SAAS;cACT,SAAQ;cACR,kBAAiB;;YAErB,YAAW;;UAGf,KAAK,mBAAmB;UACxB,KAAK;;;QAQD,aAAa,YA/BA,yBAAuB,CAAA;UAgClC,KAAK;UACL,OAPH,SAAA,QAAE;YAQG,IAAI,QAAQ;;YAPpB,IAAG,CAAC,KAAK,MAAM,OAAO,IAAI;cACxB;;YAEF,KAAK,UAAU,CACb;cACE,OAAM;cACN,SAAS,KAAK,iBAAiB,UAAU;cACzC,MAAM;cACN,QAAQ,SAAA,SAAM;gBAAC,MAAK;;cACpB,MAAK,KAAK;;YAGd,KACG,iBACA,MACA,SACA,KAAK,UAAA,UAAY;cAChB,MAAK,oBAAoB,QAAQ,CAAC,SAAS,oBAAoB,SAAS;cACxE,MAAK,QAAQ;gBACX,SAAS,YAAY,SAAS;gBAC9B,UAAU;gBACV,QAAQ,EAAC,OAAO,SAAS;;;;WASxB;UACD,KAAK;UACL,OALA,SAAA,WAAE;YACR,IAAG,CAAC,KAAK,iBAAiB,MAAM;cAC9B,OAAO;;;YAGT,IAAG,CAAC,KAAK,iBAAiB,KAAK,OAAO;cACpC,OAAO;;YAET,OAAO,KAAK;;WAOL;UACD,KAAK;UACL,OANM,SAAA,iBAAE;YACd,KAAK,MAAM,GAAG,yCAAyC,EAAC,IAAI,KAAK,MAAM,OAAO,IAAI,cAAc;;WAQzF;UACD,KAAK;UACL,OAPE,SAAA,WAAC,UAAS;YAClB,OAAO,SAAS,QAAQ,SAAS,KAAK;;;QAUlC,OAhFa;;;MAmFf,QAAQ,WAnFO;;;GAsFlB","file":"app/home/scripts/controllers/med.search.results.detail.resources.graphics.ctrl.js","sourcesContent":["'use strict';\n\nimport Selectable from 'module-crud-ui/app/scripts/crud.selectable.js';\nimport Pageable from 'module-crud-ui/app/scripts/crud.pageable.js';\n\nexport default class SearchResultsDetailCtrl {\n\n  /*@ngInject*/\n  constructor(api, $state, $injector, translateService){\n\n    this.api = api;\n    this.state = $state;\n    this.isNotVirtualSegment = {'value': false};\n    this.graphicsPageable = new Pageable(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterialsGraphics',\n        params: $state.params,\n        selectable:\n          {\n            itemKey: 'id',\n            enabled:true,\n            allowMultiSelect:false\n          },\n        executeGet:false\n      }\n    );\n    this.translateService = translateService;\n    this._init();\n  }\n\n  _init(){\n    if(!this.state.params.id) {\n      return;\n    }\n    this.actions = [\n      {\n        roles:'MMMU',\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: () => {this.onGraphicsEdit();},\n        show:this.isNotVirtualSegment\n      }\n    ];\n    this\n      .graphicsPageable\n      .get()\n      .$promise\n      .then(response => {\n        this.isNotVirtualSegment.value = !response.isVirtualSegment && response.isMediaMaterialEnabled;\n        this.audit = {\n          enabled: response && response.audit,\n          isRemote: false,\n          entity: {audit: response.audit}\n        };\n      }\n    );\n  }\n\n  getAudit(){\n    if(!this.graphicsPageable.page) {\n      return false;\n    }\n\n    if(!this.graphicsPageable.page.audit) {\n      return false;\n    }\n    return this.audit;\n  }\n\n  onGraphicsEdit(){\n    this.state.go('searchResults.detail.mediaGraphicEdit', {id: this.state.params.id, resourceType: 'graph'});\n  }\n\n  isEditable(pageable){\n    return pageable.page && pageable.page.isEditable;\n  }\n}\n"],"sourceRoot":"/source/"}