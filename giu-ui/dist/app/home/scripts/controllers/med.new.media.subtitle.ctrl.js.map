{"version":3,"sources":["app/home/scripts/controllers/med.new.media.subtitle.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,4DAA4D,CAAC,yBAAyB,UAAU,SAAS;EAAzH;EAEE,IAAI,WACe;EAAnB,OAAO;IACL,SAAS,CAAC,UAAU,iBAAiB;MACnC,YAAY,gBAAgB;;IAE9B,SAAS,YAAY;;qFAJJ,kBAAe,CAAA,UAAA,YAAA;QAM5B,aAAa,SANA,iBAAe;;;;QAGvB,SAHQ,gBAGP,WAAW,QAAQ,kBAAkB;UAQzC,IAAI,QAAQ;;UAEZ,aAAa,eAAe,MAbjB;;UAKjB,aAAA,IAAA,OAAA,eALiB,gBAAe,YAAA,eAAA,MAAA,KAAA,MAM9B;YACE,UAAU;YACV,UAAU;YACV,KAAK;YACL,aAAa;YACb,cAAc;YACd,gBAAgB;YAChB,sBAAsB;YACtB,oBAAoB;YACpB,YAAY;YACZ,YAAY;YACZ,QAAQ,OAAO;;UAGnB,KAAK,QAAQ;UACb,KAAK,mBAAmB;UACxB,KAAK,SAAS;UACd,KAAK,OAAO,QAAQ;UACpB,KAAK,UAAU,CAAC;YACd,SAAS,KAAK,iBAAiB,UAAU;YACzC,MAAM;YACN,QAAQ,SAAA,SAAM;cACZ,MAAK;;YAEP,MAAM,EAAC,OAAO;YACd,SAAS,EAAC,OAAO;;UAEnB,KAAK;;;;;;;;QAgBD,aAAa,YAjDA,iBAAe,CAAA;UAkD1B,KAAK;UACL,OAVG,SAAA,cAAG;YACZ,IAAI,OAAO;YACX,IAAI,KAAK,OAAO,UAAU,WAAW;cACnC,KAAK,OAAO,QAAQ;;YAEtB,KAAK,OAAO,MAAM,KAAK;;WAYhB;UACD,KAAK;UACL,OAXG,SAAA,YAAC,OAAO;;YAEjB,IAAI,QAAQ,KAAK,OAAO,MAAM,QAAQ;YACtC,IAAI,QAAQ,CAAC,GAAG;cACd,KAAK,OAAO,MAAM,OAAO,OAAO;;;WAc3B;UACD,KAAK;UACL,OAZI,SAAA,eAAG;YACb,KAAK,WAAW,KAAK,cAAc;YACnC,KAAK,QAAQ,KAAK,cAAc;YAChC,KAAK,YAAY,KAAK,cAAc;;WAc7B;UACD,KAAK;UACL,OAbK,SAAA,cAAC,UAAU;YAcd,IAAI,SAAS;;YAbrB,KAAK,WAAW,KAAK,IAAI,UAAU;YACnC,KAAK,SAAS,YAAY;;YAE1B,KAAK,SAAS,SAAS,KAAK,YAAM;cAChC,OAAK,SAAS,YAAY;eACzB,YAAA;cAgBO,OAhBD,OAAK,SAAS,YAAY;;;YAEnC,OAAO,KAAK;;WAmBL;UACD,KAAK;UACL,OAlBA,SAAA,WAAG;YACT,IAAI,kBAAkB,KAAK,aAAa;YACxC,IAAI,WAAW,KAAK,SAAS;YAC7B,IAAI,YAAY,KAAK,UAAU;YAC/B,IAAI,gBAAgB,KAAK,OAAO,MAAM,IAAI,UAAU,MAAM;cACtD,IAAI,WAAW;cACf,SAAS,WAAW,UAAU,KAAK,UAAU,UAAU;gBACrD,OAAO,KAAK,SAAS,MAAM,SAAS;;cAEtC,SAAS,UAAU,SAAS,KAAK,UAAU,SAAS;gBAClD,OAAO,KAAK,QAAQ,MAAM,QAAQ;;cAEpC,OAAO,QAAQ,KAAK;;YAGxB,gBAAgB,YAAY;;YAE5B,aAAA,IAAA,OAAA,eA3FiB,gBAAe,YAAA,YAAA,MAAA,KAAA;;;QA+G5B,OA/Ga;SAAwB;;MAkHvC,QAAQ,WAlHO;;;GAqHlB","file":"app/home/scripts/controllers/med.new.media.subtitle.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewSubtitleCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor($injector, $state, translateService) {\n\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterialsSubtitles',\n        key: 'id',\n        backToState: 'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params\n      }\n    );\n    this.state = $state;\n    this.translateService = translateService;\n    this.entity = {};\n    this.entity.items = [];\n    this.actions = [{\n      tooltip: this.translateService.translate('tooltip.create'),\n      icon: 'plus',\n      action: () => {\n        this.addEntryRow();\n      },\n      show: {value: true},\n      enabled: {value: true}\n    }];\n    this.getResources();\n    //this.autoEdit();\n  }\n\n // autoEdit(){\n //     this.addEntryRow();\n  //}\n\n  addEntryRow() {\n    var item = {};\n    if (this.entity.items === undefined) {\n      this.entity.items = [];\n    }\n    this.entity.items.push(item);\n  }\n\n  deleteEntry(entry) {\n    // Primero borramos el registro pedido\n    var index = this.entity.items.indexOf(entry);\n    if (index > -1) {\n      this.entity.items.splice(index, 1);\n    }\n  }\n\n  getResources() {\n    this.contents = this.getDetailData('subtitleContents');\n    this.types = this.getDetailData('subtitleTypes');\n    this.languages = this.getDetailData('languages');\n  }\n\n  getDetailData(endpoint) {\n    this.response = this.api[endpoint].get();\n    this.response.isLoading = true;\n\n    this.response.$promise.then(() => {\n      this.response.isLoading = false;\n    }, () => this.response.isLoading = false);\n\n    return this.response;\n  }\n\n  nextStep() {\n    let materialByMedia = this.getFromModel('materialByMedia');\n    let contents = this.contents.content;\n    let languages = this.languages.content;\n    let subtitlesList = this.entity.items.map(function (item) {\n        let subtitle = {};\n        subtitle.language = languages.find(function (language) {\n          return item.language.id == language.id;\n        });\n        subtitle.content = contents.find(function (content) {\n          return item.content.id == content.id;\n        });\n        return angular.copy(subtitle);\n      }\n    );\n    materialByMedia.subtitles = subtitlesList;\n\n    super.nextStep();\n  }\n\n}\n"],"sourceRoot":"/source/"}