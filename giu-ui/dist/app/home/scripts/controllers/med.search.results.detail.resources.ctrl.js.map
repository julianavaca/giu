{"version":3,"sources":["app/home/scripts/controllers/med.search.results.detail.resources.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,yEAAyE,CAAC,iDAAiD,gDAAgD,UAAU,SAAS;EAA9M;;EAGE,IAAI,YAAY,UAEG;EADnB,OAAO;IACL,SAAS,CAAC,UAAU,yCAAyC;MAC3D,aAAa,wCAAwC;OACpD,UAAU,uCAAuC;MAClD,WAAW,sCAAsC;;IAEnD,SAAS,YAAY;MALJ,0BAAuB,CAAA,YAAA;;;;;QAG/B,SAHQ,wBAGP,KAAK,QAAQ,WAAU;UAQ3B,aAAa,eAAe,MAXjB;;UAKjB,KAAK,MAAM;UACX,KAAK,QAAQ;;UAEb,KAAK,gBAAgB,IAAI,SAAS,EAAC,UAAU,WAAW,UAAU,wBAAwB,QAAQ,OAAO,QAAQ,YACjH;cACE,SAAS,MAAM,SAAQ,MAAM,kBAAiB;eAC7C,YAAW;;UAEd,KAAK,oBAAoB,IAAI,SAAS,EAAC,UAAU,WAAW,UAAU,2BAA2B,QAAQ,OAAO,QAAQ,YACxH;cACE,SAAS,MAAM,SAAQ,MAAM,kBAAiB;eAC7C,YAAW;;UAEd,KAAK,mBAAmB,IAAI,SAAS,EAAC,UAAU,WAAW,UAAU,0BAA0B,QAAQ,OAAO,QAAQ,YACtH;cACE,SAAS,MAAM,SAAQ,MAAM,kBAAiB;eAC7C,YAAW;;;QAQV,aAAa,YA7BA,yBAAuB,CAAA;UA8BlC,KAAK;UACL,OAPG,SAAA,cAAE;YACX,IAAG,KAAK,cAAc,WAAW,gBAC/B,KAAK,MAAM,GAAG,sBAAsB,EAAC,IAAI,KAAK,MAAM,OAAO,IAAI,YAAY,KAAK,cAAc,WAAW,eAAe,IAAI,cAAc;;WAQrI;UACD,KAAK;UACL,OARM,SAAA,iBAAE;YACd,IAAG,KAAK,kBAAkB,WAAW,gBACnC,KAAK,MAAM,GAAG,sBAAsB,EAAC,IAAI,KAAK,MAAM,OAAO,IAAI,YAAY,KAAK,kBAAkB,WAAW,eAAe,IAAI,cAAc;;WASzI;UACD,KAAK;UACL,OATM,SAAA,iBAAE;YACd,IAAG,KAAK,iBAAiB,WAAW,gBAClC,KAAK,MAAM,GAAG,sBAAsB,EAAC,IAAI,KAAK,MAAM,OAAO,IAAI,YAAY,KAAK,iBAAiB,WAAW,eAAe,IAAI,cAAc;;WAUxI;UACD,KAAK;UACL,OATE,SAAA,WAAC,UAAS;YAClB,OAAO,SAAS,QAAQ,SAAS,KAAK,WAAW,SAAS,KAAK,QAAQ,MAAM,SAAS,KAAK,QAAQ,GAAG;;;QAYlG,OAlDa;;;MAqDf,QAAQ,WArDO;;;GAwDlB","file":"app/home/scripts/controllers/med.search.results.detail.resources.ctrl.js","sourcesContent":["'use strict';\n\nimport Selectable from 'module-crud-ui/app/scripts/crud.selectable.js';\nimport Pageable from 'module-crud-ui/app/scripts/crud.pageable.js';\n\nexport default class SearchResultsDetailCtrl {\n\n  /*@ngInject*/\n  constructor(api, $state, $injector){\n\n    this.api = api;\n    this.state = $state;\n\n    this.audioPageable = new Pageable({injector: $injector, endpoint: 'mediaMaterialsAudios', params: $state.params, selectable:\n    {\n      itemKey: 'id', enabled:true, allowMultiSelect:false\n    }, executeGet:true});\n\n    this.subtitlesPageable = new Pageable({injector: $injector, endpoint: 'mediaMaterialsSubtitles', params: $state.params, selectable:\n    {\n      itemKey: 'id', enabled:true, allowMultiSelect:false\n    }, executeGet:true});\n\n    this.graphicsPageable = new Pageable({injector: $injector, endpoint: 'mediaMaterialsGraphics', params: $state.params, selectable:\n    {\n      itemKey: 'id', enabled:true, allowMultiSelect:false\n    }, executeGet:true});\n  }\n\n  onAudioEdit(){\n    if(this.audioPageable.selectable.itemSelected())\n      this.state.go('mediaResourcesEdit', {id: this.state.params.id, resourceId: this.audioPageable.selectable.itemSelected().id, resourceType: 'audio'});\n  }\n  onSubtitleEdit(){\n    if(this.subtitlesPageable.selectable.itemSelected())\n      this.state.go('mediaResourcesEdit', {id: this.state.params.id, resourceId: this.subtitlesPageable.selectable.itemSelected().id, resourceType: 'subtitle'});\n  }\n  onGraphicsEdit(){\n    if(this.graphicsPageable.selectable.itemSelected())\n      this.state.go('mediaResourcesEdit', {id: this.state.params.id, resourceId: this.graphicsPageable.selectable.itemSelected().id, resourceType: 'graph'});\n  }\n\n  isEditable(pageable){\n    return pageable.page && pageable.page.content && pageable.page.content[0] && pageable.page.content[0].isEditable;\n  }\n}\n"],"sourceRoot":"/source/"}