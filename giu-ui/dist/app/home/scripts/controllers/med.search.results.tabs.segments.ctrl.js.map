{"version":3,"sources":["app/home/scripts/controllers/med.search.results.tabs.segments.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.search.results.tabs.segments.ctrl.js","sourcesContent":["'use strict';\n\n/* global console */\n\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\nimport SegmentsBase from './med.segments.base.ctrl.js';\n\nexport default class SearchResultsTabsSegmentsCtrl extends Saveable  {\n\n  /*@ngInject*/\n  constructor(\n    $injector,\n    segmentService,\n    squeezeService,\n    segmentTransformerService,\n    translateService,\n    $state,\n    $mdDialog,\n    alertService,\n    $scope){\n\n    //noinspection JSAnnotator\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaSegments',\n        backToState: \".\",\n        key: 'id',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'common.alert.edit.success.title',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        entityDependenciesExecuteGet:false,\n        entityDependencies: [\n          {api: 'mediaSqueezeCreditsTypes', loading: 'isLoading', model: 'squeezeCreditTypes'},\n          {api: 'networkResource', loading: 'isLoading', model: 'networkData'},\n          {api: 'mediaTypeResource', loading: 'isLoading', model: 'types'}\n        ]\n      }\n    );\n    this.segmentsBase = new SegmentsBase(\n      segmentService,\n      squeezeService,\n      segmentTransformerService,\n      translateService,\n      $state,\n      $mdDialog,\n      alertService,\n      $scope\n    );\n    \n    this.$state = $state;\n    this.mdDialog = $mdDialog;\n    this.alertService = alertService;\n    this.segmentTransformerService = segmentTransformerService;\n    this.translateService = translateService;\n    this.segmentService = segmentService;\n    this.squeezeService = squeezeService;\n\n    if(!this.$state.params.id){\n      this.isLoading=false;\n      return;\n    }\n    this.segmentsBase.segmentEdit = {value: false};\n    this.segmentsBase.segmentEditShow = {value: false};\n    this.segmentsBase.squeezeCreate = {value: false};\n    this.showContextMenu = {value: false};\n    this.segmentsBase.action = [\n      {\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: ()=>{this._onSegmentEdit();},\n        show: this.segmentsBase.segmentEditShow\n      },\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSegmentCreate();},\n        show: this.segmentsBase.segmentEdit\n      }\n    ];\n    this.segmentsBase.squeezeCreditsEdit = {value: false};\n    this.viewVirtualSegmentFlag = {value: false};\n    this.segmentsBase.actionSqueezeCredits = [\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSqueezeCreate();},\n        show: this.segmentsBase.squeezeCreate\n      }\n    ];\n\n    this.segmentsBase.contextMenu = [\n      {\n        label: this.translateService.translate('results.tabs.segments.create.virtual.segment'),\n        action: () => {\n          this.openCreateVirtualSegment();\n        },\n        show:this.showContextMenu\n      },\n      {\n        label: this.translateService.translate('results.tabs.segments.view.virtual.segment'),\n        action: () => {\n          this.$state.go('viewVirtualSegment', {id: this.$state.params.id});\n        },\n        show: this.viewVirtualSegmentFlag\n      }\n    ];\n\n    this.getFormats();\n    this._getEntityDependencies();\n    this.getMediaMaterial();\n    this.getMedia();\n    this._execute();\n  }\n\n  getMediaMaterial(){\n    this.response = this.api['mediaMaterials'].get({'id': this.$state.params.id});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.mediaMaterial = response;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n  }\n\n  getMedia(){\n    this.response = this.api['medias'].get({'currentId': this.$state.params.currentId});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.media = response;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n  }\n\n\n  /*\n  * Esto es un horror, hay que refactorizarlo. Perdón, pero tenemos que terminar de cerrar otras cosas.\n  * */\n  getFormats(){\n    this.response = this.api['mediaFormatResource'].get({'virtualSegmented':false});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.formats = response.content;\n      this.getFormatsForLFID(response.content);\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  getFormatsForLFID(formats){\n    let self = this;\n    this.response = this.api['mediaFormatResource'].get({'virtualSegmented':true});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.formatsLfId = response.content;\n\n      let originFormat = (response.content.concat(formats)).find(function(format){return format.id == self.media.format});\n\n      this.formatsLfId = self.formatsLfId.filter(function(format){return format.definition == originFormat.definition});\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  updateAspectRatioList(){\n    if(this.copy.media.type && this.copy.media.format){\n      this.getAspectRatios(this.copy.media.format.concat('-').concat(this.copy.media.type).concat('-').concat(1));\n    }\n  }\n\n  getAspectRatios(media){\n    this.response = this.api['aspectsRatioMedias'].get({'id': media});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.aspectRatios = response.content;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  _getEntityDependencies(){\n    this.entityDependencies.forEach(\n      it => {\n        this.api[it.api].get(it.params).$promise.then(response => {\n          this[it.model] = response.content;\n        });\n      });\n  }\n\n  getTitle(){\n    return this.translateService.translate('results.tabs.segments.mainTitle');\n  }\n\n  inspectAspectRatio(){\n    if(this.copy && this.copy.aspectRatio && this.copy.aspectRatio.id == 'undefined'){\n      delete this.copy.aspectRatio.id;\n    }\n  }\n\n  clone() {\n    let promise = this.api['mediamateriallfid'].save({'id': this.$state.params.id}, this.copy).$promise;\n    promise.then((response) => {\n      this.alertService.success(\n        {\n          title: this.translate(this.successTitle),\n          message: this.translate(this.successCreateMessage)\n        }\n      );\n      this.$state.go('viewVirtualSegment', {id:this.$state.params.id,'editFirst':true});\n      \n      this.mdDialog.hide();\n    }, (err) => {\n      this.alertService.error({\n        title: this.translate(this.errorTitle),\n        message: err.data.message\n      });\n    });\n  }\n\n  _getPosition(str, m, i) {\n    return str.split(m, i).join(m).length;\n  };\n\n  openCreateVirtualSegment(ev){\n    let self = this;\n    this.mdDialog\n      .show(\n      {\n        controller: ($scope, $mdDialog) => {\n          $scope.vm = self;\n        },\n        templateUrl: 'home/views/med.search.results.detail.segments.new.virtual.segment.html',\n        parent: angular.element(document.body),\n        targetEvent: ev,\n        clickOutsideToClose: false\n      }\n    );\n  }\n\n  shouldSelectAspectRatioForLFID(){\n    return (!this.mediaMaterial.aspectRatio && this.isAspectRatioRequired())\n      || this.isNewFormatLFID();\n  }\n\n  isAspectRatioRequired(){\n    if(!this.copy || !this.copy.media){\n      return false;\n    }\n    return this.types.find(it => it.id == this.copy.media.type && it.mandatoryAspectRatio);\n  }\n\n  isInvalidCopy(){\n    return !this.copy || !this.copy.media;\n  }\n\n  getFormat(format){\n    let elem = this.formats.find(it => it.id === format);\n    if(!elem) {\n      return this.formatsLfId.find(it => it.id === format);\n    }\n    return elem;\n  }\n\n  isNewFormatLFID(){\n    if(this.isInvalidCopy()){\n      return false;\n    }\n    let currentFormat = this.getFormat(this.media.format);\n    let newFormat = this.getFormat(this.copy.media.format);\n    return currentFormat.definition !== newFormat.definition;\n  }\n\n  closeModal() {\n    this.mdDialog.hide();\n  }\n\n  getSegmentBase(){\n    return this.segmentsBase;\n  }\n\n  getSegmentBaseProperty(property){\n    return this.segmentsBase[property];\n  }\n\n  _initSegment(){\n    this.segmentsBase._initSegment();\n  }\n\n  _onSegmentCreate(){\n    this.segmentsBase._onSegmentCreate();\n  }\n\n  _checkInitialSegment(){\n    this.segmentsBase._checkInitialSegment();\n  }\n\n  _onSegmentEdit(){\n    this.segmentsBase._onSegmentEdit()\n  }\n\n  _onSqueezeCreate(){\n    this.segmentsBase._onSqueezeCreate();\n  }\n\n  _execute(){\n    let self = this;\n    this\n      .get()\n      .$promise\n      .then((response) => {\n        this.viewVirtualSegmentFlag.value = !this.entity.isVirtualSegment && this.entity.isMediaMaterialEnabled;\n        this.showContextMenu.value = this.entity.isMediaMaterialEnabled;\n        this.segmentsBase.segmentEditShow.value = this.entity.isMediaMaterialEnabled;\n        this.segmentsBase.entity = this.entity;\n        this.segmentTransformerService.segmentsToString(this.entity.items);\n        this.segmentsBase.segments = this.entity.items;\n        this.changeSegment(this.segmentsBase.segments[0]);\n\n        this.segmentsBase.audit = {\n          enabled: response && response.audit,\n          entity: {audit: response.audit}\n        };\n\n      });\n  }\n\n  getAudit(){\n    if(!this.entity){\n      return false;\n    }\n    if(!this.entity.audit) {\n      return false;\n    }\n    return this.segmentsBase.audit;\n  }\n  \n  changeSegment(segment){\n    this.segmentsBase.changeSegment(segment);\n  }\n\n  _allowCreateSqueeze(){\n    this.segmentsBase._allowCreateSqueeze();\n  }\n\n  deleteEntry(entry){\n    this.segmentsBase.deleteEntry(entry);\n  }\n\n  deleteSegment(index){\n    this.segmentsBase.deleteSegment(index);\n  }\n\n  segmentCancel(){\n    this.segmentsBase.segmentCancel(this);\n  }\n\n  reload(){\n    this.segmentsBase.reload();\n  }\n\n  isValid(){\n    return this.segmentsBase.isValid();\n  }\n\n  validateAndSave(form){\n    form.$valid = this.isValid();\n    this.segmentTransformerService.segmentsToObject(this.segmentsBase.segments);\n\n    this\n      .save(form)\n      .then(()=> this.$state.go(this.$state.current, {}, {reload: true}) );\n  }\n\n  changeCreditType(segment){\n    this.segmentsBase.changeCreditType(segment);\n  }\n\n  createCredit(segment){\n    this.segmentsBase.createCredit(segment);\n  }\n\n  deleteSqueeze(squeeze){\n    this.segmentsBase.deleteSqueeze(squeeze);\n  }\n  \n  ingestIDChange(segment){\n    if(!segment.ingestID){\n      segment.isIngested = false;\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}