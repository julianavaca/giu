{"version":3,"sources":["app/home/scripts/controllers/med.new.media.rejection.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.new.media.rejection.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaRejectionCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor(translateService, $injector, rejectionService, rejectionTransformerService, api, $state){\n\n    super(\n      {\n        injector:$injector,\n        endpoint:'mediaRejections',\n        key:'id',\n        backToState:'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'common.alert.edit.success.title',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params\n      }\n    );\n\n    this.translateService = translateService;\n    this.rejectionService = rejectionService;\n\n    this.api = api;\n    this.rejectionTransformerService = rejectionTransformerService;\n\n\n    this.entity = {\n      items:[],\n      standard: {\n        frames: undefined\n      }\n    }; // para que no tiren error las validations\n\n    this.rejectionsEdit = {value: true};\n    this.rejectionsEditShow = {value: false};\n    this.actions = [\n      {\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: ()=>{this._onRejectionEdit();},\n        show: this.rejectionsEditShow\n      },\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onRejectionCreate();},\n        show: this.rejectionsEdit\n      }\n    ];\n  }\n\n  //autoEdit(){\n //   this._onRejectionCreate();\n // }\n\n  _onRejectionCreate(){\n    if (typeof this.entity.items === 'undefined') {\n      this.entity.items = [];\n    }\n    let rejAux = {\n      tCInStr : this.entity.mediaMaterialTimeFrameInStr,\n      tCOutStr : this.entity.mediaMaterialTimeFrameOutStr,\n      quality : { observations: 'Enter observations here.' }\n    };\n    this.rejectionService.updateTCLen(rejAux, this.entity.standard.frames);\n\n    this.entity.items.push(rejAux);\n\n  }\n\n  deleteEntry(entry){\n    let index = this.entity.items.indexOf(entry);\n    this.deleteRejection(index);\n  }\n\n  deleteRejection(index){\n    this.entity.items.splice(index, 1);\n  }\n\n  _onRejectionEdit(){\n    this.rejectionsEdit.value = !this.rejectionsEdit.value;\n    this.rejectionsEditShow.value = !this.rejectionsEditShow.value;\n  }\n\n  isValid() {\n    // TODO: hacer mas elegante\n    if(!angular.isDefined(this.entity.items)){\n      return true;\n    }\n\n    let isValidFormat = this.rejectionService.areFormatValid(this.entity.items);\n    let isFramesValid = this.rejectionService.areFramesValid(this.entity.items, this.entity.standard.frames);\n    let areInsideMaterial = this.rejectionService.areInsideMaterial(\n      this.entity.items,\n      this.entity.mediaMaterialTimeFrameInStr,\n      this.entity.mediaMaterialTimeFrameOutStr);\n\n    return isValidFormat && isFramesValid && areInsideMaterial;\n  }\n\n  validateAndSave(form){\n    form.$valid = this.isValid();\n    this.isLoading = true;\n    this.rejectionTransformerService.rejectionsToObject(this.entity.items);\n\n    delete this.entity.mediaMaterialTimeFrameInStr;\n    delete this.entity.mediaMaterialTimeFrameOutStr;\n    delete this.entity.virtualSegment;\n  }\n\n  getTechnicalQualities(rejection){\n    this.getQualities(rejection);\n  }\n\n  changeTechnicalQualities(rejection){\n    this.getQualities(rejection);\n    rejection.quality.severity = undefined;\n    rejection.quality.id = undefined;\n    rejection.severity = undefined;\n    rejection.comments = undefined;\n  }\n\n  getQualities(rejection) {\n    let response;\n    if (rejection.quality.type !== undefined) {\n\n      response = this.api.technicalQualities.get({'typeId':rejection.quality.type.id});\n      response.$promise.then((response) => {\n        rejection.qualities = response.content;\n\n      }, (error) => {\n        this.isLoading = false;\n      });\n    }\n  }\n\n  findSeverityComments(rejection) {\n    if(!rejection.qualities){\n      return false;\n    }\n    rejection.quality = angular.copy(rejection.qualities.find(it =>  it.id == rejection.quality.id));\n    rejection.comments = rejection.quality.observations;\n    rejection.severity = rejection.quality.severity;\n  }\n\n  _execute(){\n    let self = this;\n    self.isLoading = true;\n    this\n      .get()\n      .$promise\n      .then(response => {\n\n        self.rejectionTransformerService.rejectionsToString(response.items);\n        self.entity.mediaMaterialTimeFrameInStr = self.rejectionTransformerService.timeBaseTransformerService\n          ._toString(response.mediaMaterialTimeFrameIn);\n        self.entity.mediaMaterialTimeFrameOutStr = self.rejectionTransformerService.timeBaseTransformerService\n          ._toString(response.mediaMaterialTimeFrameOut);\n        self.audit = {\n          enabled: response && response.audit,\n          entity: {audit: response.audit}\n        };\n        //this.autoEdit();\n\n      });\n  }\n\n  _onTabLoad() {\n\n    this.entityAux = this.newMediaService.getModel();\n    this.params.id = this.newMediaService.getFromModel('media').id; //FIB1-TX-1324560-148068-21\n\n    this.entity = {\n      standard: {\n        frames: this.newMediaService.getFromModel('standard').frames\n      }\n    };\n\n    this.entity.mediaMaterialTimeFrameIn = this.newMediaService.getFromModel('timeCodeIn');\n    this.entity.mediaMaterialTimeFrameOut = this.newMediaService.getFromModel('timeCodeOut');\n\n    this.rejectionTypes = this.api.rejectionTypes.get();\n\n    if(this.params.id){\n      this._execute();\n    }\n  }\n\n  saveAndNextStep(form){\n    this.validateAndSave(form);\n    this.deleteQualities();\n    super.saveAndNextStep(form);\n    this.remakeQualities();\n  }\n\n  saveAndExit(form){\n    this.validateAndSave(form);\n    this.deleteQualities();\n    super.saveAndExit(form);\n    this.remakeQualities();\n  }\n\n  deleteQualities(){\n    this.entity.items.forEach(it => {\n      delete it.qualities;\n    });\n  }\n\n  remakeQualities(){\n    this.entity.items.forEach( rej => {\n      if(rej.quality.type){\n        this.getQualities(rej);\n      }\n    });\n  }\n}\n"],"sourceRoot":"/source/"}