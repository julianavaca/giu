{"version":3,"sources":["app/home/scripts/controllers/med.new.media.graphic.ctrl.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,2DAA2D,CAAC,yBAAyB,UAAU,SAAS;EAAxH;EAEE,IAAI,WACe;EAAnB,OAAO;IACL,SAAS,CAAC,UAAU,iBAAiB;MACnC,YAAY,gBAAgB;;IAE9B,SAAS,YAAY;;yFAJJ,sBAAmB,CAAA,UAAA,YAAA;QAMhC,aAAa,SANA,qBAAmB;;;;QAG3B,SAHQ,oBAGP,WAAW,QAAO,kBAAiB;UAQvC,IAAI,QAAQ;;UAEZ,aAAa,eAAe,MAbjB;;UAKjB,aAAA,IAAA,OAAA,eALiB,oBAAmB,YAAA,eAAA,MAAA,KAAA,MAMlC;YACE,UAAS;YACT,UAAS;YACT,KAAI;YACJ,aAAY;YACZ,cAAc;YACd,gBAAgB;YAChB,sBAAsB;YACtB,oBAAoB;YACpB,YAAY;YACZ,YAAY;YACZ,QAAQ,OAAO;;;UAInB,KAAK,QAAQ;UACb,KAAK,mBAAiB;UACtB,KAAK,SAAO;UACZ,KAAK,OAAO,QAAM;UAClB,KAAK,UAAQ,CAAC;YACZ,SAAS,KAAK,iBAAiB,UAAU;YACzC,MAAM;YACN,QAAQ,SAAA,SAAM;cAAC,MAAK;;YACpB,MAAK,EAAC,OAAM;YACZ,SAAQ,EAAC,OAAM;;UAEjB,KAAK;;;;QAcD,aAAa,YA9CA,qBAAmB,CAAA;UA+C9B,KAAK;UACL,OAZA,SAAA,WAAE;YACN,KAAK;;WAcA;UACD,KAAK;UACL,OAbG,SAAA,cAAE;YACX,IAAI,OAAK;YACT,IAAG,KAAK,OAAO,UAAQ,WAAU;cAC/B,KAAK,OAAO,QAAM;;YAEpB,KAAK,OAAO,MAAM,KAAK;;WAehB;UACD,KAAK;UACL,OAdG,SAAA,YAAC,OAAM;;YAEhB,IAAI,QAAQ,KAAK,OAAO,MAAM,QAAQ;YACtC,IAAI,QAAQ,CAAC,GAAG;cACd,KAAK,OAAO,MAAM,OAAO,OAAO;;;WAiB3B;UACD,KAAK;UACL,OAfI,SAAA,eAAE;YACZ,KAAK,WAAW,KAAK,cAAc;YACnC,KAAK,YAAY,KAAK,cAAc;YACpC,KAAK,QAAQ,KAAK,cAAc;;WAiBzB;UACD,KAAK;UACL,OAfK,SAAA,cAAC,UAAS;YAgBb,IAAI,SAAS;;YAfrB,KAAK,WAAW,KAAK,IAAI,UAAU;YACnC,KAAK,SAAS,YAAY;;YAE1B,KAAK,SAAS,SAAS,KAAK,YAAM;cAChC,OAAK,SAAS,YAAY;eACzB,YAAA;cAkBO,OAlBD,OAAK,SAAS,YAAY;;;YAEnC,OAAO,KAAK;;WAqBL;UACD,KAAK;UACL,OApBA,SAAA,WAAE;YACR,IAAI,kBAAkB,KAAK,aAAa;YACxC,IAAI,WAAW,KAAK,SAAS;YAC7B,IAAI,YAAY,KAAK,UAAU;YAC/B,IAAI,cAAc,KAAK,OAAO,MAAM,IAAI,UAAU,MAAM;cACpD,IAAI,UAAU;cACd,QAAQ,WAAW,UAAU,KAAK,UAAU,UAAU;gBACpD,OAAO,KAAK,SAAS,MAAM,SAAS;;cAEtC,QAAQ,UAAU,SAAS,KAAK,UAAU,SAAS;gBACjD,OAAO,KAAK,QAAQ,MAAM,QAAQ;;cAEpC,OAAO,QAAQ,KAAK;;;YAIxB,gBAAgB,WAAW;;YAE3B,aAAA,IAAA,OAAA,eA5FiB,oBAAmB,YAAA,YAAA,MAAA,KAAA;;;QAkHhC,OAlHa;SAA4B;;MAqH3C,QAAQ,WArHO;;;GAwHlB","file":"app/home/scripts/controllers/med.new.media.graphic.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaGraphicCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor($injector, $state,translateService){\n\n    super(\n      {\n        injector:$injector,\n        endpoint:'mediaMaterialsGraphics',\n        key:'id',\n        backToState:'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params\n      }\n    );\n\n    this.state = $state;\n    this.translateService=translateService;\n    this.entity={};\n    this.entity.items=[];\n    this.actions=[{\n      tooltip: this.translateService.translate('tooltip.create'),\n      icon: 'plus',\n      action: () => {this.addEntryRow();},\n      show:{value:true},\n      enabled:{value:true}\n    }];\n    this.getResources();\n    //this.autoEdit();\n  }\n\n  autoEdit(){\n      this.addEntryRow();\n  }\n\n  addEntryRow(){\n    var item={};\n    if(this.entity.items===undefined){\n      this.entity.items=[];\n    }\n    this.entity.items.push(item);\n  }\n\n  deleteEntry(entry){\n    // Primero borramos el registro pedido\n    var index = this.entity.items.indexOf(entry);\n    if (index > -1) {\n      this.entity.items.splice(index, 1);\n    }\n  }\n\n  getResources(){\n    this.contents = this.getDetailData('graphicContents');\n    this.languages = this.getDetailData('languages');\n    this.types = this.getDetailData('graphicTypes');\n\n  }\n\n  getDetailData(endpoint){\n    this.response = this.api[endpoint].get();\n    this.response.isLoading = true;\n\n    this.response.$promise.then(() => {\n      this.response.isLoading = false;\n    }, () => this.response.isLoading = false);\n\n    return this.response;\n  }\n\n  nextStep(){\n    let materialByMedia = this.getFromModel('materialByMedia');\n    let contents = this.contents.content;\n    let languages = this.languages.content;\n    let graphicList = this.entity.items.map(function (item) {\n        let graphic = {};\n        graphic.language = languages.find(function (language) {\n          return item.language.id == language.id;\n        });\n        graphic.content = contents.find(function (content) {\n          return item.content.id == content.id;\n        });\n        return angular.copy(graphic);\n      }\n    );\n\n    materialByMedia.graphics = graphicList;\n\n    super.nextStep();\n  }\n\n}\n"],"sourceRoot":"/source/"}