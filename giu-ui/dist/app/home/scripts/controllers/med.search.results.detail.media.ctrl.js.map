{"version":3,"sources":["app/home/scripts/controllers/med.search.results.detail.media.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.search.results.detail.media.ctrl.js","sourcesContent":["/**\n * Created by julian on 25/02/16.\n */\n'use strict';\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\nexport default class SearchResultsDetailMediaCtrl extends Saveable {\n\n  /*@ngInject*/\n  constructor($injector, $state, translateService, alertService, $mdDialog) {\n\n    super(\n      {\n        injector: $injector,\n        endpoint: 'medias',\n        key: 'currentId',\n        backToState: '.',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        entityDependenciesExecuteGet:false,\n        entityDependencies: [\n          {api: 'networkResource', loading: 'isLoading', model: 'networkData'},\n          {api: 'mediaTypeResource', loading: 'isLoading', model: 'types'}\n        ]\n      }\n    );\n    this.collapsableId = 'searchResultsDetailMediaCtrl';\n    this.state = $state;\n    this.translateService = translateService;\n    this.mdDialog = $mdDialog;\n    this.alertService = alertService;\n    this._load();\n  }\n\n  getFormats(){\n    this.response = this.api['mediaFormatResource'].get({'virtualSegmented':false});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.formats = response.content;\n      this.getFormatsForLFID();\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  getFormatsForLFID(){\n    let self = this;\n    this.response = this.api['mediaFormatResource'].get({'virtualSegmented':true});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.formatsLfId = response.content;\n\n      let originFormat = (self.formatsLfId.concat(self.formats)).find(function(format){return format.id == self.entity.format});\n\n      this.formatsLfId = self.formatsLfId.filter(function(format){return format.definition == originFormat.definition});\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  getMediaMaterial(){\n    this.response = this.api['mediaMaterials'].get({'id': this.state.params.id});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.mediaMaterial = response;\n      this.cloneMediaFlag.value = this.entity.status.type == 'V' && this.mediaMaterial.isEnable;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  _load() {\n    this.materilId = true;\n    if(!this.state.params.id){\n      this.materilId = false;\n    }\n    if(!this.state.params.currentId){\n      return;\n    }\n    this.isNotVirtualSegment = {value: false};\n    this.mediaEditShow = {value: true};\n    this.cloneMediaFlag = {value:false};\n    this.mediaDisabled = {value : false};\n    this.actions = [\n      {\n        roles: 'MMMU',\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: () => {\n          this.mediaEdit = !this.mediaEdit;\n          this.mediaEditShow.value = !this.mediaEditShow.value;\n\t\t      this.isNotVirtualSegment.value = !this.isNotVirtualSegment.value;\n          this.cloneMediaFlag.value = !this.cloneMediaFlag.value;\n          this.oldValue = this.copyList(this.entity);\n          this._load();\n        },\n        show: this.isNotVirtualSegment\n      },\n      {\n        //roles:'MMMU',\n        enabled:true,\n        tooltip: this.translateService.translate('tooltip.create'),\n        action: () => { this.state.go('newMedia'); },\n        icon: 'plus',\n        show:this.mediaDisabled\n      }\n    ];\n    this.contextMenu = [\n      {\n        roles:'MMMC',\n        label: this.translateService.translate('med.clone'),\n        action: () => {\n          this.openCopyMenu();\n        },\n        show: this.cloneMediaFlag\n      },\n      {\n        roles:'MMMC',\n        label: this.translateService.translate('med.copy.lfid'),\n        action: () => {\n          this.openCopyLfidMenu();\n        },\n        show: this.cloneMediaFlag\n      }\n    ];\n    let response = this._getEntity();\n    this._getEntityDependencies();\n    response.$promise.then(()=>{this.getMediaMaterial();this.getFormats();});\n  }\n\n  _getEntity(){\n    this.isLoading = true;\n    this.response = this.get();\n    this.response\n      .$promise\n      .then(\n        (response) => {\n          this.isNotVirtualSegment.value = !response.isVirtualSegment && response.status.type == 'V';\n          this.mediaDisabled.value = this.entity.status.type == 'V';\n          this.audit = {\n            enabled: true,\n            isRemote: true,\n            endpoint: 'medias',\n            params: {currentId: this.state.params.currentId}\n          };\n\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n    return this.response;\n  }\n\n  _getEntityDependencies(){\n    this.entityDependencies.forEach(\n      it => {\n        this.api[it.api].get(it.params).$promise.then(response => {\n          this[it.model] = response.content;\n        });\n      });\n  }\n\n  initCreate() {\n    this.entity.media = {network: {}, state: {}};\n  }\n\n  _initEdit(){\n    this.initStatusValue = this.entity.status.type;\n  }\n\n  save(form) {\n\n    if(this.initStatusValue === 'V' && this.entity.status.type !== 'V' && this.entity.programated === 'S'){\n\n      this.alertService.warning(\n        {\n          title: this.translateService.translate('search.form.media.warning.title'),\n          message: this.translateService.translate('search.form.media.warning.description')\n        },\n        () => this._saveAction(form)\n      );\n\n\n    } else {\n      this._saveAction(form);\n    }\n\n  }\n\n  _saveAction(form){\n    super\n      .save(form)\n      .then(() => {\n        this\n          .get()\n          .$promise\n          .then(()=> {\n            if(this.entity.status.type == 'A'){\n              this.state.go(this.state.current, {},{reload: true});\n            }\n            this.mediaEdit = false;\n            this.isNotVirtualSegment.value = true;\n            this._load();\n\n          }\n        );\n      }\n    );\n\n  }\n\n  _isNew() {\n    let id = this.$state.params[this.key];\n    return !id;\n  }\n\n  cloneMedia(){\n    this.clone('cloneMedia');\n  }\n\n  cloneMediaLfid(){\n    this.clone('cloneMediaLfid');\n  }\n\n  clone(endpoint) {\n    this.isLoading = true;\n    let promise = this.api[endpoint].save({'mediaId': this.state.params.currentId}, this.copy).$promise;\n    promise.then((response) => {\n      this.alertService.success(\n        {\n          title: this.translate(this.successTitle),\n          message: this.translate(this.successCreateMessage)\n        }\n      );\n      let lastIndex = response.url.lastIndexOf('/');\n      let mediaId = response.url.substring(lastIndex + 1);\n      let id = mediaId.split('-');\n\n        let parentParams = {\n          mediaFormat: id[0],\n          mediaType: id[1],\n          mediaId: id[2]\n        };\n        this.state.go('searchResults', parentParams);\n      this.mdDialog.hide();\n      this.isLoading = false;\n    }, (err) => {\n      this.alertService.error({\n        title: this.translate(this.errorTitle),\n        message: err.data.message\n      });\n      this.isLoading = false;\n    });\n  }\n  \n  closeModal() {\n    this.mdDialog.hide();\n    this.cloneMediaFlag.value = true;\n    this.copy = {};\n  }\n\n  updateAspectRatioList(){\n    if(this.copy.media.type && this.copy.media.format){\n      this.getAspectRatios(this.copy.media.format.concat('-').concat(this.copy.media.type).concat('-').concat(1));\n    }\n  }\n\n  getAspectRatios(media){\n    this.response = this.api['aspectsRatioMedias'].get({'id': media});\n    this.response.isLoading = true;\n    var objectData = this.response;\n\n    this.response.$promise.then((response) => {\n\n      objectData.isLoading = false;\n      objectData.valid = true;\n      this.aspectRatios = response.content;\n\n    }, function(error) {\n      // Si nos devuelve un 404, no queremos que se muestre el recurso, pero tampoco que nos tire error\n      if(error.status == 404){\n        objectData.valid = false;\n        objectData.isLoading = false;\n      }\n    });\n    return this.response;\n  }\n\n  openCopyMenu(ev) {\n    let templateUrl= 'home/views/med.search.results.detail.media.dialog.clone.media.html';\n    this.openCopy(ev, templateUrl);\n  }\n\n  openCopyLfidMenu(ev) {\n    let templateUrl= 'home/views/med.search.results.detail.media.dialog.clone.lfid.media.html';\n    this.openCopy(ev, templateUrl);\n  }\n\n  isNetworkEditable(){\n    return this.entity.network && !this.entity.network.id && this.entity.network.feed && this.entity.network.feed.id;\n  }\n\n  openCopy(ev,templateUrl){\n    if (this.entity.status.type == 'V') {\n      this.cloneMediaFlag.value = false;\n      let self = this;\n      this.mdDialog\n        .show(\n          {\n            controller: ($scope, $mdDialog) => {\n              $scope.vm = self;\n            },\n            templateUrl: templateUrl,\n            parent: angular.element(document.body),\n            targetEvent: ev,\n            clickOutsideToClose: false\n          }\n        );\n    }\n  }\n\n  inspectAspectRatio(){\n    if(this.copy && this.copy.aspectRatio && this.copy.aspectRatio.id == 'undefined'){\n      delete this.copy.aspectRatio.id;\n    }\n  }\n\n  shouldSelectAspectRatio(){\n    return (!this.mediaMaterial.aspectRatio && this.isAspectRatioRequired())\n      || this.isNewFormat();\n  }\n\n  shouldSelectAspectRatioForLFID(){\n    return (!this.mediaMaterial.aspectRatio && this.isAspectRatioRequired())\n      || this.isNewFormatLFID();\n  }\n\n  isInvalidCopy(){\n    return !this.copy || !this.copy.media;\n  }\n\n  getFormat(format){\n    let elem = this.formats.find(it => it.id === format);\n\n    if(!elem){\n      return this.formatsLfId.find(it => it.id === format);\n    }\n    return elem;\n  }\n\n  isNewFormatLFID(){\n    if(this.isInvalidCopy()){\n      return false;\n    }\n    let currentFormat = this.getFormat(this.entity.format);\n    let newFormat = this.getFormat(this.copy.media.format);\n    return currentFormat.definition !== newFormat.definition;\n  }\n\n  isNewFormat(){\n    if(this.isInvalidCopy()){\n      return false;\n    }\n    let currentFormat = this.getFormat(this.entity.format);\n    let newFormat = this.getFormat(this.copy.media.format);\n    return currentFormat.definition !== newFormat.definition;\n  }\n\n  isAspectRatioRequired(){\n    if(!this.copy || !this.copy.media){\n      return false;\n    }\n    return this.types.find(it => it.id == this.copy.media.type && it.mandatoryAspectRatio);\n  }\n\n  copyList(value){\n    return angular.copy(value);\n  }\n\n  cancelMedia(){\n    this.mediaEdit= !this.mediaEdit;\n    this.isNotVirtualSegment.value=true;\n    this.cloneMediaFlag.value = false;\n    this.entity = this.oldValue;\n    this._load();\n  }\n}\n"],"sourceRoot":"/source/"}