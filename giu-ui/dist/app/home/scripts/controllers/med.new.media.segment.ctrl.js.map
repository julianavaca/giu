{"version":3,"sources":["app/home/scripts/controllers/med.new.media.segment.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.new.media.segment.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaSegmentCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor(\n    $injector,\n    $state,\n    segmentService,\n    squeezeService,\n    segmentTransformerService,\n    translateService,\n    $scope,\n    alertService){\n\n    super(\n      {\n        injector:$injector,\n        endpoint:'mediaSegments',\n        key:'id',\n        backToState:'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params,\n        entityDependencies: [\n          {api: 'mediaSqueezeCreditsTypes', loading: 'isLoading', model: 'squeezeCreditTypes'}\n        ]\n      }\n    );\n\n    this.segmentTransformerService = segmentTransformerService;\n    this.translateService = translateService;\n    this.alertService = alertService;\n    this.segmentService = segmentService;\n    this.squeezeService = squeezeService;\n    this.$scope = $scope;\n    this._initSegment();\n    //this.autoEdit();\n  }\n\n // autoEdit(){\n  //    this._onSegmentCreate();\n // }\n\n  _initSegment(){\n    this.model = this.newMediaService.getModel();\n    this.action = [\n       {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSegmentCreate();},\n        show: {value:true}\n      }\n    ];\n    this.actionSqueezeCredits = [\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onSqueezeCreate();},\n        show: {value:true}\n      }\n    ];\n    if(this.$state.params.id){\n      this._execute();\n    } else {\n      this.entity = {items: []};\n    }\n  }\n\n  _onSegmentCreate(){\n    if (typeof this.entity === 'undefined') {\n      this.entity = {\n        items: []\n      };\n    }\n    let segAux = {\n      segmentNumber : this.entity.items.length,\n      lth:\"00:00:00:00\",\n      tCIn:\"00:00:00:00\",\n      tCOut:\"00:00:00:00\",\n      credit: undefined,\n      squeezeCredit:[],\n      isIngested: false\n    };\n    if(this.entity.items.length > 0){\n      segAux.tCIn = this.entity.items[this.entity.items.length-1].tCOut;\n    }\n    this.entity.items.push(segAux);\n    this.changeSegment(segAux);\n  }\n\n  _execute(){\n    this\n      .get()\n      .$promise\n      .then(response => {\n        this.entity = response;\n        this.segmentTransformerService.segmentsToString(this.entity.items);\n        this.changeSegment(this.entity.items[0]);\n      });\n  }\n\n  _onSqueezeCreate(){\n    if (!this.selectedSegment.squeezeCredit) {\n      this.selectedSegment.squeezeCredit = [];\n    }\n    let sqAux = {\n      code : { id : undefined },\n      TFIn : this.selectedSegment.credit.tCIn,\n      TFLen : \"00:00:00:00\"\n    };\n    this.selectedSegment.squeezeCredit.push(sqAux);\n  }\n\n  changeSegment(segment){\n    if(!segment) {\n      return;\n    }\n    if(!this.selectedSegment) {\n      this.selectedSegment = segment;\n    }\n    if(segment.segmentNumber !== this.selectedSegment.segmentNumber){\n      this.selectedSegment = segment;\n    }\n  }\n\n  changeCreditType(segment){\n    if(!segment.credit.type.id){\n      segment.credit=undefined;\n      segment.squeezeCredit=undefined;\n    }else{\n      this.createCredit(segment);\n    }\n  }\n\n  createCredit(segment){\n    if (segment.credit) {\n      segment.credit.lth=segment.credit.lth || \"00:00:00:00\";\n      segment.credit.tCIn=segment.credit.tCIn || this.selectedSegment.tCIn;\n      segment.credit.tCOut= segment.credit.tCOut || \"00:00:00:00\";\n    }\n  }\n\n  deleteEntry(entry) {\n    if(typeof entry === 'undefined'){\n      this.deleteItemInArraySqueeze(entry);\n    }\n    //borramos el registro pedido\n    if (entry.isScheduled != undefined && entry.isScheduled == true) {\n      this.alertService.dismissable({\n          title: this.translateService.translate('results.tabs.segments.scheduled.title'),\n          message: this.translateService.translate('results.tabs.segments.scheduled.message')\n        },\n        ()=>\n          this.deleteSegment(entry)\n      );\n    }else{\n      this.deleteSegment(entry);\n    }\n  }\n\n  deleteSegment(entry){\n    let index=this.entity.items.indexOf(entry);\n    this.entity.items.splice(index, 1);\n    this.entity.items.forEach(seg => {\n      seg.segmentNumber = this.entity.items.indexOf(seg);\n    });\n  }\n\n  deleteSqueeze(sq) {\n    if (this.entity.items) {\n      let indx=this.selectedSegment.squeezeCredit.indexOf(sq);\n      this.selectedSegment.squeezeCredit.splice(indx, 1);\n    }\n  }\n\n  deleteItemInArraySqueeze(segment){\n    if (segment){\n      if(segment.credit!=null && segment.credit!==undefined){\n        segment.squeezeCredits = [];\n      }\n    }\n  }\n\n  isValid() {\n    if(!this.entity.items) {\n      return true;\n    }\n\n    if(this.entity.items.length<1){\n      return true;\n    }\n    if(this.newMediaService.invalidPlusDetail !== false){\n      return false;\n    }\n    let isValid = this.segmentService.areValid(this.entity.items);\n    let isValidFormat = this.segmentService.areFormatValid(this.entity.items);\n    let isOverlaped = this.segmentService.areOverlaped(this.entity.items);\n    let isCreditValid = this.segmentService.areCreditValid(this.entity.items);\n    let isFramesValid = this.segmentService.areFramesValid(this.entity.items, this.model.standard.frames);\n    let isValidSqueezeFormat = this.squeezeService.areFormatValid(this.selectedSegment.squeezeCredit);\n    let isFramesSqueezeValid = this.segmentService.areFramesValid(this.entity.items, this.model.standard.frames);\n    let isValidSqueezes =\n      this.squeezeService.areSqueezesValid(this.selectedSegment.squeezeCredit, this.selectedSegment.credit);\n    return isValid && !isOverlaped && isValidFormat &&\n      isCreditValid && isValidSqueezeFormat &&\n      isFramesValid && isFramesSqueezeValid &&\n      isValidSqueezes;\n  }\n\n  saveAndNextStep(form){\n    form.$valid = this.isValid();\n    if(this.entity.items.length < 1){\n      super.nextStep();\n    } else{\n      this.segmentTransformerService.segmentsToObject(this.entity.items);\n      super\n        .saveAndNextStepWithCallback(form, () => this._execute());\n    }\n  }\n\n  saveAndExit(form){\n    form.$valid = this.isValid();\n    this.segmentTransformerService.segmentsToObject(this.entity.items);\n    super\n      .saveAndExit(form)\n  }\n\n  nextStep(){\n    let segmentLength = this.newMediaService.getFromModel('materialByMedia');\n    segmentLength.segments = { length: this.entity.items.length };\n    this.setResourceOnModel('mediaSegments','mediaSegments');\n    this.newMediaService.invalidSegment = false;\n    super.nextStep();\n  }\n\n  setResourceOnModel(endpoint, keyForModel, attr){\n    this.api[endpoint].get({'id':this.newMediaService.mediaId}).$promise.then((response)=>{\n      if(attr){\n        this.newMediaService.setToModel(keyForModel, response[attr]);\n      } else {\n        this.newMediaService.setToModel('timeCodein', response.items[0].timeCodeIn);\n        this.newMediaService.setToModel('timeCodeOut', response.items[0].timeCodeOut);\n      }\n    });\n  }\n\n  checkSegmentTheme(){\n    if(this.newMediaService.model.mediaSegments === undefined) {\n      return;\n    }\n    if(this.newMediaService.model.mediaSegments.items.length === 0 ){\n      return;\n    }\n    if(this.newMediaService.model.mediaSegments.theme != undefined\n      && this.newMediaService.model.mediaSegments.theme.duration != undefined){\n      let segmentZero = this.entity.items.find(function(segment){\n        return segment.segmentNumber === 0;\n      });\n      let length = this.segmentTransformerService.segmentToObject(angular.copy(segmentZero)).length;\n      return length.second != this.newMediaService.model.mediaSegments.theme.duration;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}