{"version":3,"sources":["app/home/scripts/controllers/med.search.results.tabs.rejections.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.search.results.tabs.rejections.ctrl.js","sourcesContent":["'use strict';\n\nimport Saveable from 'module-crud-ui/app/scripts/crud.saveable.js';\n\nexport default class SearchResultsTabsRejectionsCtrl extends Saveable {\n\n  /*@ngInject*/\n  constructor(translateService, $injector, rejectionService, rejectionTransformerService, api) {\n\n    //noinspection JSAnnotator\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaRejections',\n        backToState: \".\",\n        key: 'id',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'common.alert.edit.success.title',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false\n      }\n    );\n\n    this.translateService = translateService;\n    this.rejectionService = rejectionService;\n    this.api = api;\n    this.rejectionTransformerService = rejectionTransformerService;\n    this._load();\n  }\n\n  _load(){\n    if(!this.$state.params.id){\n      return false;\n    }\n    this.audit = {\n      enabled: false,\n      entity: {audit:''}\n    };\n    this._execute();\n    this.rejectionsEdit = {value: false};\n    this.rejectionsEditShow = {value: false};\n    this.actions = [\n      {\n        tooltip: this.translateService.translate('tooltip.edit'),\n        icon: 'edit',\n        action: ()=>{this._onRejectionEdit();},\n        show: this.rejectionsEditShow\n      },\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: ()=>{this._onRejectionCreate();},\n        show: this.rejectionsEdit\n      }\n    ];\n    this.rejectionTypes = this.api.rejectionTypes.get();\n  }\n\n  _onRejectionCreate(){\n    if (typeof this.entity.items === 'undefined') {\n      this.entity.items = [];\n    }\n    let rejAux = {\n      tCInStr : this.entity.mediaMaterialTimeFrameInStr,\n      tCOutStr : this.entity.mediaMaterialTimeFrameOutStr,\n      quality : { observations: 'Enter observations here.' }\n    };\n    this.rejectionService.updateTCLen(rejAux, this.entity.standard.frames);\n    this.entity.items.push(rejAux);\n  }\n\n  deleteEntry(entry){\n    let index = this.entity.items.indexOf(entry);\n      this.deleteRejection(index);\n  }\n\n  deleteRejection(index){\n    this.entity.items.splice(index, 1);\n  }\n\n  _onRejectionEdit(){\n    this.rejectionsEdit.value = !this.rejectionsEdit.value;\n    this.rejectionsEditShow.value = !this.rejectionsEditShow.value;\n    if(this.entity.items.length === 0){\n      this._onRejectionCreate();\n    } else {\n      this.entity.items.forEach( rej => {\n        if(rej.quality.type){\n          this.getQualities(rej);\n        }\n      });\n    }\n  }\n\n  isValid() {\n    // TODO: hacer mas elegante\n    if(!this.$state.params.id){\n      return false;\n    }\n    if(!angular.isDefined(this.entity.items)){\n      return true;\n    }\n \n    let isValidFormat = this.rejectionService.areFormatValid(this.entity.items);\n    let isFramesValid = this.rejectionService.areFramesValid(this.entity.items, this.entity.standard.frames);\n    let areInsideMaterial = this.rejectionService.areInsideMaterial(this.entity.items,this.entity.mediaMaterialTimeFrameInStr,this.entity.mediaMaterialTimeFrameOutStr);\n    let areTCINvsTCOUTValid = this.rejectionService.areTCInVsTCOutValid(this.entity.items);\n    let severitiesExist = this.entity.items.every(it => it.severity !== null && it.severity !== undefined);\n    return isValidFormat && isFramesValid && areInsideMaterial && areTCINvsTCOUTValid && severitiesExist;\n  }\n    \n  validateAndSave(form){\n    form.$valid = this.isValid();\n    this.reload();\n    this.rejectionTransformerService.rejectionsToObject(this.entity.items);\n    this.entity.items.forEach(it => {\n      delete it.qualities;\n    });\n    delete this.entity.mediaMaterialTimeFrameInStr;\n    delete this.entity.mediaMaterialTimeFrameOutStr;\n    if(this.entity.virtualSegment !== undefined){\n      delete this.entity.virtualSegment;\n    }\n    this\n      .save(form)\n      .then(() => this.reload())\n      .then(() => this._execute());\n  }\n  reload(){\n    this.rejectionsEdit.value = false;\n    this.rejectionsEditShow.value = true;\n  }\n\n  getTechnicalQualities(rejection){\n    this.getQualities(rejection);\n  }\n\n  changeTechnicalQualities(rejection){\n    this.getQualities(rejection);\n    rejection.quality.severity = undefined;\n    rejection.quality.id = undefined;\n    rejection.severity = undefined;\n    rejection.comments = undefined;\n  }\n  \n  getQualities(rejection) {\n    let response;\n    if (rejection.quality.type !== undefined) {\n      this.isLoading = true;\n      response = this.api.technicalQualities.get({'typeId':rejection.quality.type.id});\n      response.$promise.then((response) => {\n        rejection.qualities = response.content;\n        this.isLoading = false;\n      }, (error) => {\n        this.isLoading = false;\n      });\n    }\n  }\n\n  findSeverityComments(rejection) {\n    if(!rejection.qualities){\n      return false;\n    }\n    rejection.quality = angular.copy(rejection.qualities.find(it =>  it.id == rejection.quality.id));\n    rejection.comments = rejection.quality.observations;\n    rejection.severity = rejection.quality.severity;\n  }\n\n  rejectionCancel(){\n    this.reload();\n    this._execute();\n  }\n\n  _execute(){\n    let self = this;\n    self.isLoading = true;\n    this\n      .get()\n      .$promise\n      .then((response) => {\n        self.rejectionsEditShow.value = !response.isVirtualSegment && response.isMediaMaterialEnabled;\n        self.rejectionTransformerService.rejectionsToString(self.entity.items);\n        self.entity.mediaMaterialTimeFrameInStr = self.rejectionTransformerService.timeBaseTransformerService._toString(self.entity.mediaMaterialTimeFrameIn);\n        self.entity.mediaMaterialTimeFrameOutStr = self.rejectionTransformerService.timeBaseTransformerService._toString(self.entity.mediaMaterialTimeFrameOut);\n        self.audit.enabled = response && response.audit;\n        self.audit.entity.audit = response.audit;\n\n     \n      });\n  }\n\n  getAudit(){\n    if(!this.entity) {\n      return false;\n    }\n    if(!this.entity.audit) {\n      return false;\n    }\n    return this.audit;\n  }\n}\n\n"],"sourceRoot":"/source/"}