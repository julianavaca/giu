{"version":3,"sources":["app/home/scripts/controllers/med.segments.base.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.segments.base.ctrl.js","sourcesContent":["'use strict';\n\n/* global console */\n\nexport default class SegmentsBase {\n\n  /*@ngInject*/\n  constructor(\n    segmentService,\n    squeezeService,\n    segmentTransformerService,\n    translateService,\n    $state,\n    $mdDialog,\n    alertService,\n    $scope){\n\n    this.alertService = alertService;\n    this.$state= $state;\n    this.$scope = $scope;\n    this.mdDialog = $mdDialog;\n    this.segmentTransformerService = segmentTransformerService;\n    this.translateService = translateService;\n    this.segmentService = segmentService;\n    this.squeezeService = squeezeService;\n  }\n  _onSegmentCreate(){\n    if (typeof this.segments === 'undefined') {\n      this.segments = [];\n    }\n    let segAux = {\n      segmentNumber : this.segments.length,\n      lth:\"00:00:00:00\",\n      tCIn:\"00:00:00:00\",\n      tCOut:\"00:00:00:00\",\n      credit: undefined,\n      squeezeCredit:[],\n      isIngested: false\n    };\n    if(this.segments.length > 1){\n      segAux.tCIn = this.segments[this.segments.length-1].tCOut;\n    }\n    this.segments.push(segAux);\n    this._checkInitialSegment();\n    this.changeSegment(segAux);\n    this.squeezeCreditsEdit.value = false;\n  }\n\n  _checkInitialSegment(){\n    if(this.segments.length > 1){\n      this.segments[0].ingestID = undefined;\n    }\n  }\n\n  _onSegmentEdit(){\n    this.segmentEdit.value = !this.segmentEdit.value;\n    this.segmentEditShow.value = !this.segmentEditShow.value;\n    if(this.segments == 0){\n      this._onSegmentCreate();\n    }\n    this._allowCreateSqueeze();\n  }\n\n  _onSqueezeCreate(){\n    if (!this.selectedSegment.squeezeCredit) {\n      this.selectedSegment.squeezeCredit = [];\n    }\n    let sqAux = {\n      code : undefined,\n      TFIn : \"00:00:00:00\",\n      TFLen : \"00:00:00:00\",\n      TFOut : \"00:00:00:00\"\n    };\n    if(this.selectedSegment.squeezeCredit.length === 0){\n      sqAux.TFIn = this.selectedSegment.credit.tCIn;\n      sqAux.TFLen = this.selectedSegment.credit.lth;\n      sqAux.TFOut = this.selectedSegment.credit.tCOut;\n    }else{\n      sqAux.TFIn = this.selectedSegment.squeezeCredit[this.selectedSegment.squeezeCredit.length-1].TFOut;\n    }\n    this.selectedSegment.squeezeCredit.push(sqAux);\n  }\n\n  changeSegment(segment){\n    if(!segment) {\n      return;\n    }\n    if(!this.selectedSegment) {\n      this.selectedSegment = segment;\n    }\n    if(segment.segmentNumber !== this.selectedSegment.segmentNumber){\n      this.selectedSegment = segment;\n      this._allowCreateSqueeze();\n    }\n  }\n\n  _allowCreateSqueeze(){\n    let hasCredit = typeof this.selectedSegment.credit !== 'undefined' &&\n      this.selectedSegment.credit !== null && this.segmentEdit.value;\n    this.squeezeCreate.value = hasCredit;\n  }\n\n  deleteEntry(entry) {\n    let self = this;\n    let index = this.segments.indexOf(entry);\n    if (entry.isScheduled != undefined && entry.isScheduled == true) {\n      this.alertService.dismissable({\n          title: this.translateService.translate('results.tabs.segments.scheduled.title'),\n          message: this.translateService.translate('results.tabs.segments.scheduled.message')\n        },\n        ()=>\n          this.deleteSegment(index,self)\n      );\n    }else{\n      this.deleteSegment(index,self);\n    }\n  }\n\n  checkSegmentTheme(){\n\n    if(this.entity != undefined && this.entity.theme != undefined && this.entity.theme.duration != undefined){\n\n\n      let segmentZero = this.segments.find(function(segment){\n        return segment.segmentNumber === 0;\n      });\n\n      let length = this.segmentTransformerService.segmentToObject(angular.copy(segmentZero)).length;\n\n      //let seconds = this.getPosition(length, ':', 2);\n\n      return length.second != this.entity.theme.duration;\n    }\n\n  }\n\n  getPosition(str, m, i) {\n    return str.split(m, i).join(m).length;\n  };\n\n  deleteSegment(index,self){\n    self.segments.splice(index, 1);\n    self.segments.forEach(seg => {\n      seg.segmentNumber = self.segments.indexOf(seg);\n    });\n    this.$scope.$apply();\n  }\n\n  segmentCancel(target){\n    this.segmentEdit.value= !this.segmentEdit.value;\n    this.segmentEditShow.value= !this.segmentEditShow.value;\n    this.squeezeCreate.value = false;\n    this.squeezeCreditsEdit.value=false;\n    this.selectedSegment = undefined;\n    target._execute();\n  }\n\n  reload(){\n    this.segmentEdit.value = false;\n    this.segmentEditShow.value = true;\n    this.squeezeCreditsEdit.value = this.segmentEdit.value;\n    this.selectedSegment = undefined;\n  }\n\n  isValid() {\n    if(!this.segments){\n      return false;\n    }\n    if(this.segments.length<1){\n      return false;\n    }\n\n    let isValid = this.segmentService.areValid(this.segments);\n    let isValidFormat = this.segmentService.areFormatValid(this.segments);\n    let isOverlaped = this.segmentService.areOverlaped(this.segments);\n    let isCreditValid = this.segmentService.areCreditValid(this.segments);\n    let isFramesValid = this.segmentService.areFramesValid(this.segments, this.entity.standard.frames);\n    let isValidIngestedId=this.segmentService.notDuplicateIngestedId(this.segments);\n    \n    let isValidSqueezeFormat = this.squeezeService.areFormatValid(this.selectedSegment.squeezeCredit);\n    let isFramesSqueezeValid = this.squeezeService.areSqueezeFramesFromSegmentsValid(this.segments, this.entity.standard.frames);\n    let isValidSqueezes =\n      this.squeezeService.areSqueezesValid(this.selectedSegment.squeezeCredit, this.selectedSegment.credit);\n    \n    return isValid && !isOverlaped && isValidFormat &&\n      isCreditValid && isValidSqueezeFormat &&\n      isFramesValid && isFramesSqueezeValid &&\n      isValidSqueezes && isValidIngestedId;\n  }\n\n  validateAndSave(form){\n    form.$valid = this.isValid();\n    //TODO: Hacer un clone mas lindo;\n    this.entity.items = [];\n    this.segments.forEach(seg => {\n      this.entity.items.push(Object.assign({},seg));\n    });\n    this.segmentTransformerService.segmentsToObject(this.entity.items);\n    this\n      .save(form)\n      .then(()=> this.reload(),(error)=>{\n        this.onResponseError(error);\n      }\n    )\n      .then(() => this._execute());\n  }\n\n  changeCreditType(segment){\n    if(!segment.credit.type.id){\n      segment.credit = undefined;\n      segment.squeezeCredit = [];\n    } else {\n      this.createCredit(segment);\n    }\n    this._allowCreateSqueeze();\n  }\n\n  createCredit(segment){\n    if (segment.credit) {\n      segment.credit.lth = segment.credit.lth || this.selectedSegment.lth;\n      segment.credit.tCIn = segment.credit.tCIn || this.selectedSegment.tCIn;\n      segment.credit.tCOut = segment.credit.tCOut || this.selectedSegment.tCOut;\n    }\n  }\n\n  deleteSqueeze(squeeze) {\n    let index = this.selectedSegment.squeezeCredit.indexOf(squeeze);\n    this.selectedSegment.squeezeCredit.splice(index, 1);\n  }\n\n  onResponseError(error){\n    if(error.status === 422){\n      let msj='Error in: ';\n      error.data.forEach( err =>{\n        msj= msj + ' ' + err.field;\n      });\n      this.alertService.error({\n        title: this.translateService.translate('results.tabs.segments.error.message.IngestId.duplicate'),\n        message: msj\n      });\n    }\n  }\n}\n"],"sourceRoot":"/source/"}