{"version":3,"sources":["app/home/scripts/controllers/med.new.media.audio.ctrl.js"],"names":[],"mappings":"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","file":"app/home/scripts/controllers/med.new.media.audio.ctrl.js","sourcesContent":["'use strict';\nimport WizardTab from '../med.wizard.tab.js';\n\nexport default class NewMediaAudioCtrl extends WizardTab {\n\n  /*@ngInject*/\n  constructor($injector, $state, translateService) {\n\n    super(\n      {\n        injector: $injector,\n        endpoint: 'mediaMaterialsAudios',\n        key: 'id',\n        backToState: 'newMedia.summary',\n        successTitle: 'media.edit.alert.success.title',\n        successMessage: 'media.edit.alert.success.message',\n        successCreateMessage: 'media.edit.alert.create.success.message',\n        successEditMessage: 'media.edit.alert.success.message',\n        errorTitle: 'media.edit.alert.error',\n        executeGet: false,\n        params: $state.params\n      }\n    );\n    this.state = $state;\n    this.translateService = translateService;\n    this.entity = {};\n    this.entity.items = [];\n    this.actions = [{\n      icon: 'copy',\n      action: () => {\n        this.copyEntryRow();\n      },\n      show: {value: true},\n      enabled: {value: true}\n    },\n      {\n        tooltip: this.translateService.translate('tooltip.create'),\n        icon: 'plus',\n        action: () => {\n          this.addEntryRow();\n        },\n        show: {value: true},\n        enabled: {value: true}\n      }];\n    this.getResources();\n   // this.autoEdit();\n  }\n  \n  //autoEdit(){\n  //    this.addEntryRow();\n //}\n\n  copyEntryRow() {\n    var item = {};\n    if (this.entity.items !== undefined && this.entity.items.length > 0) {\n      angular.copy(this.entity.items[this.entity.items.length - 1], item);\n      item.id = this.getIdForNewEntry();\n      this.entity.items.push(item);\n    } else {\n      this.addEntryRow();\n    }\n\n  }\n\n  addEntryRow() {\n    var item = {};\n    if (this.entity.items === undefined) {\n      this.entity.items = [];\n    }\n    item.id = this.getIdForNewEntry();\n    this.entity.items.push(item);\n  }\n\n  deleteEntry(entry) {\n    // Primero borramos el registro pedido\n    var index = this.entity.items.indexOf(entry);\n    if (index > -1) {\n      this.entity.items.splice(index, 1);\n    }\n\n    for (var i = 0; i < this.entity.items.length; i++) {\n      var currentId = this.entity.items[i].id;\n      if (currentId > entry.id) {\n        this.entity.items[i].id = currentId - 1;\n      }\n    }\n  }\n\n  // Calcula el id que debe tomar el nuevo registro\n  getIdForNewEntry() {\n    var maxId = 0;\n    for (var i = 0; i < this.entity.items.length; i++) {\n      var currentId = this.entity.items[i].id;\n      if (currentId > maxId) {\n        maxId = currentId;\n      }\n    }\n    return maxId + 1;\n  }\n\n  getResources() {\n    this.contents = this.getDetailData('audioContents');\n    this.types = this.getDetailData('audioTypes');\n    this.languages = this.getDetailData('languages');\n  }\n\n  getDetailData(endpoint) {\n    this.response = this.api[endpoint].get();\n    this.response.isLoading = true;\n\n    this.response.$promise.then(() => {\n      this.response.isLoading = false;\n    }, () => this.response.isLoading = false);\n\n    return this.response;\n  }\n\n  nextStep() {\n    let materialByMedia = this.getFromModel('materialByMedia');\n    var languages = this.languages.content;\n    let languagesList = this.entity.items.map((it) => {\n        let lang = languages.find((language) => {\n          return it.language.id == language.id;\n        });\n        return angular.copy(lang);\n      }\n    );\n\n    super.nextStep();\n    materialByMedia.audios = languagesList;\n  }\n\n}\n"],"sourceRoot":"/source/"}